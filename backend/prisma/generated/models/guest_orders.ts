
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `guest_orders` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model guest_orders
 * 
 */
export type guest_ordersModel = runtime.Types.Result.DefaultSelection<Prisma.$guest_ordersPayload>

export type AggregateGuest_orders = {
  _count: Guest_ordersCountAggregateOutputType | null
  _avg: Guest_ordersAvgAggregateOutputType | null
  _sum: Guest_ordersSumAggregateOutputType | null
  _min: Guest_ordersMinAggregateOutputType | null
  _max: Guest_ordersMaxAggregateOutputType | null
}

export type Guest_ordersAvgAggregateOutputType = {
  id: number | null
  total_amount: number | null
}

export type Guest_ordersSumAggregateOutputType = {
  id: bigint | null
  total_amount: number | null
}

export type Guest_ordersMinAggregateOutputType = {
  id: bigint | null
  session_id: string | null
  email: string | null
  address_line1: string | null
  address_line2: string | null
  city: string | null
  state_province: string | null
  postal_code: string | null
  country: string | null
  phone: string | null
  total_amount: number | null
  status: string | null
  save_details_for_account: boolean | null
  created_at: Date | null
  updated_at: Date | null
}

export type Guest_ordersMaxAggregateOutputType = {
  id: bigint | null
  session_id: string | null
  email: string | null
  address_line1: string | null
  address_line2: string | null
  city: string | null
  state_province: string | null
  postal_code: string | null
  country: string | null
  phone: string | null
  total_amount: number | null
  status: string | null
  save_details_for_account: boolean | null
  created_at: Date | null
  updated_at: Date | null
}

export type Guest_ordersCountAggregateOutputType = {
  id: number
  session_id: number
  email: number
  address_line1: number
  address_line2: number
  city: number
  state_province: number
  postal_code: number
  country: number
  phone: number
  total_amount: number
  status: number
  save_details_for_account: number
  created_at: number
  updated_at: number
  _all: number
}


export type Guest_ordersAvgAggregateInputType = {
  id?: true
  total_amount?: true
}

export type Guest_ordersSumAggregateInputType = {
  id?: true
  total_amount?: true
}

export type Guest_ordersMinAggregateInputType = {
  id?: true
  session_id?: true
  email?: true
  address_line1?: true
  address_line2?: true
  city?: true
  state_province?: true
  postal_code?: true
  country?: true
  phone?: true
  total_amount?: true
  status?: true
  save_details_for_account?: true
  created_at?: true
  updated_at?: true
}

export type Guest_ordersMaxAggregateInputType = {
  id?: true
  session_id?: true
  email?: true
  address_line1?: true
  address_line2?: true
  city?: true
  state_province?: true
  postal_code?: true
  country?: true
  phone?: true
  total_amount?: true
  status?: true
  save_details_for_account?: true
  created_at?: true
  updated_at?: true
}

export type Guest_ordersCountAggregateInputType = {
  id?: true
  session_id?: true
  email?: true
  address_line1?: true
  address_line2?: true
  city?: true
  state_province?: true
  postal_code?: true
  country?: true
  phone?: true
  total_amount?: true
  status?: true
  save_details_for_account?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type Guest_ordersAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which guest_orders to aggregate.
   */
  where?: Prisma.guest_ordersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of guest_orders to fetch.
   */
  orderBy?: Prisma.guest_ordersOrderByWithRelationInput | Prisma.guest_ordersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.guest_ordersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` guest_orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` guest_orders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned guest_orders
  **/
  _count?: true | Guest_ordersCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Guest_ordersAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Guest_ordersSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Guest_ordersMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Guest_ordersMaxAggregateInputType
}

export type GetGuest_ordersAggregateType<T extends Guest_ordersAggregateArgs> = {
      [P in keyof T & keyof AggregateGuest_orders]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateGuest_orders[P]>
    : Prisma.GetScalarType<T[P], AggregateGuest_orders[P]>
}




export type guest_ordersGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.guest_ordersWhereInput
  orderBy?: Prisma.guest_ordersOrderByWithAggregationInput | Prisma.guest_ordersOrderByWithAggregationInput[]
  by: Prisma.Guest_ordersScalarFieldEnum[] | Prisma.Guest_ordersScalarFieldEnum
  having?: Prisma.guest_ordersScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Guest_ordersCountAggregateInputType | true
  _avg?: Guest_ordersAvgAggregateInputType
  _sum?: Guest_ordersSumAggregateInputType
  _min?: Guest_ordersMinAggregateInputType
  _max?: Guest_ordersMaxAggregateInputType
}

export type Guest_ordersGroupByOutputType = {
  id: bigint
  session_id: string
  email: string
  address_line1: string
  address_line2: string | null
  city: string
  state_province: string
  postal_code: string
  country: string
  phone: string | null
  total_amount: number
  status: string
  save_details_for_account: boolean
  created_at: Date
  updated_at: Date
  _count: Guest_ordersCountAggregateOutputType | null
  _avg: Guest_ordersAvgAggregateOutputType | null
  _sum: Guest_ordersSumAggregateOutputType | null
  _min: Guest_ordersMinAggregateOutputType | null
  _max: Guest_ordersMaxAggregateOutputType | null
}

type GetGuest_ordersGroupByPayload<T extends guest_ordersGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Guest_ordersGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Guest_ordersGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Guest_ordersGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Guest_ordersGroupByOutputType[P]>
      }
    >
  >



export type guest_ordersWhereInput = {
  AND?: Prisma.guest_ordersWhereInput | Prisma.guest_ordersWhereInput[]
  OR?: Prisma.guest_ordersWhereInput[]
  NOT?: Prisma.guest_ordersWhereInput | Prisma.guest_ordersWhereInput[]
  id?: Prisma.BigIntFilter<"guest_orders"> | bigint | number
  session_id?: Prisma.StringFilter<"guest_orders"> | string
  email?: Prisma.StringFilter<"guest_orders"> | string
  address_line1?: Prisma.StringFilter<"guest_orders"> | string
  address_line2?: Prisma.StringNullableFilter<"guest_orders"> | string | null
  city?: Prisma.StringFilter<"guest_orders"> | string
  state_province?: Prisma.StringFilter<"guest_orders"> | string
  postal_code?: Prisma.StringFilter<"guest_orders"> | string
  country?: Prisma.StringFilter<"guest_orders"> | string
  phone?: Prisma.StringNullableFilter<"guest_orders"> | string | null
  total_amount?: Prisma.FloatFilter<"guest_orders"> | number
  status?: Prisma.StringFilter<"guest_orders"> | string
  save_details_for_account?: Prisma.BoolFilter<"guest_orders"> | boolean
  created_at?: Prisma.DateTimeFilter<"guest_orders"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"guest_orders"> | Date | string
  guest_order_items?: Prisma.Guest_order_itemsListRelationFilter
}

export type guest_ordersOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  session_id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  address_line1?: Prisma.SortOrder
  address_line2?: Prisma.SortOrderInput | Prisma.SortOrder
  city?: Prisma.SortOrder
  state_province?: Prisma.SortOrder
  postal_code?: Prisma.SortOrder
  country?: Prisma.SortOrder
  phone?: Prisma.SortOrderInput | Prisma.SortOrder
  total_amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  save_details_for_account?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  guest_order_items?: Prisma.guest_order_itemsOrderByRelationAggregateInput
}

export type guest_ordersWhereUniqueInput = Prisma.AtLeast<{
  id?: bigint | number
  AND?: Prisma.guest_ordersWhereInput | Prisma.guest_ordersWhereInput[]
  OR?: Prisma.guest_ordersWhereInput[]
  NOT?: Prisma.guest_ordersWhereInput | Prisma.guest_ordersWhereInput[]
  session_id?: Prisma.StringFilter<"guest_orders"> | string
  email?: Prisma.StringFilter<"guest_orders"> | string
  address_line1?: Prisma.StringFilter<"guest_orders"> | string
  address_line2?: Prisma.StringNullableFilter<"guest_orders"> | string | null
  city?: Prisma.StringFilter<"guest_orders"> | string
  state_province?: Prisma.StringFilter<"guest_orders"> | string
  postal_code?: Prisma.StringFilter<"guest_orders"> | string
  country?: Prisma.StringFilter<"guest_orders"> | string
  phone?: Prisma.StringNullableFilter<"guest_orders"> | string | null
  total_amount?: Prisma.FloatFilter<"guest_orders"> | number
  status?: Prisma.StringFilter<"guest_orders"> | string
  save_details_for_account?: Prisma.BoolFilter<"guest_orders"> | boolean
  created_at?: Prisma.DateTimeFilter<"guest_orders"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"guest_orders"> | Date | string
  guest_order_items?: Prisma.Guest_order_itemsListRelationFilter
}, "id">

export type guest_ordersOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  session_id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  address_line1?: Prisma.SortOrder
  address_line2?: Prisma.SortOrderInput | Prisma.SortOrder
  city?: Prisma.SortOrder
  state_province?: Prisma.SortOrder
  postal_code?: Prisma.SortOrder
  country?: Prisma.SortOrder
  phone?: Prisma.SortOrderInput | Prisma.SortOrder
  total_amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  save_details_for_account?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  _count?: Prisma.guest_ordersCountOrderByAggregateInput
  _avg?: Prisma.guest_ordersAvgOrderByAggregateInput
  _max?: Prisma.guest_ordersMaxOrderByAggregateInput
  _min?: Prisma.guest_ordersMinOrderByAggregateInput
  _sum?: Prisma.guest_ordersSumOrderByAggregateInput
}

export type guest_ordersScalarWhereWithAggregatesInput = {
  AND?: Prisma.guest_ordersScalarWhereWithAggregatesInput | Prisma.guest_ordersScalarWhereWithAggregatesInput[]
  OR?: Prisma.guest_ordersScalarWhereWithAggregatesInput[]
  NOT?: Prisma.guest_ordersScalarWhereWithAggregatesInput | Prisma.guest_ordersScalarWhereWithAggregatesInput[]
  id?: Prisma.BigIntWithAggregatesFilter<"guest_orders"> | bigint | number
  session_id?: Prisma.StringWithAggregatesFilter<"guest_orders"> | string
  email?: Prisma.StringWithAggregatesFilter<"guest_orders"> | string
  address_line1?: Prisma.StringWithAggregatesFilter<"guest_orders"> | string
  address_line2?: Prisma.StringNullableWithAggregatesFilter<"guest_orders"> | string | null
  city?: Prisma.StringWithAggregatesFilter<"guest_orders"> | string
  state_province?: Prisma.StringWithAggregatesFilter<"guest_orders"> | string
  postal_code?: Prisma.StringWithAggregatesFilter<"guest_orders"> | string
  country?: Prisma.StringWithAggregatesFilter<"guest_orders"> | string
  phone?: Prisma.StringNullableWithAggregatesFilter<"guest_orders"> | string | null
  total_amount?: Prisma.FloatWithAggregatesFilter<"guest_orders"> | number
  status?: Prisma.StringWithAggregatesFilter<"guest_orders"> | string
  save_details_for_account?: Prisma.BoolWithAggregatesFilter<"guest_orders"> | boolean
  created_at?: Prisma.DateTimeWithAggregatesFilter<"guest_orders"> | Date | string
  updated_at?: Prisma.DateTimeWithAggregatesFilter<"guest_orders"> | Date | string
}

export type guest_ordersCreateInput = {
  id?: bigint | number
  session_id: string
  email: string
  address_line1: string
  address_line2?: string | null
  city: string
  state_province: string
  postal_code: string
  country: string
  phone?: string | null
  total_amount: number
  status?: string
  save_details_for_account?: boolean
  created_at?: Date | string
  updated_at?: Date | string
  guest_order_items?: Prisma.guest_order_itemsCreateNestedManyWithoutGuest_orderInput
}

export type guest_ordersUncheckedCreateInput = {
  id?: bigint | number
  session_id: string
  email: string
  address_line1: string
  address_line2?: string | null
  city: string
  state_province: string
  postal_code: string
  country: string
  phone?: string | null
  total_amount: number
  status?: string
  save_details_for_account?: boolean
  created_at?: Date | string
  updated_at?: Date | string
  guest_order_items?: Prisma.guest_order_itemsUncheckedCreateNestedManyWithoutGuest_orderInput
}

export type guest_ordersUpdateInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  session_id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  address_line1?: Prisma.StringFieldUpdateOperationsInput | string
  address_line2?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  state_province?: Prisma.StringFieldUpdateOperationsInput | string
  postal_code?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.StringFieldUpdateOperationsInput | string
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  total_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  save_details_for_account?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  guest_order_items?: Prisma.guest_order_itemsUpdateManyWithoutGuest_orderNestedInput
}

export type guest_ordersUncheckedUpdateInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  session_id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  address_line1?: Prisma.StringFieldUpdateOperationsInput | string
  address_line2?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  state_province?: Prisma.StringFieldUpdateOperationsInput | string
  postal_code?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.StringFieldUpdateOperationsInput | string
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  total_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  save_details_for_account?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  guest_order_items?: Prisma.guest_order_itemsUncheckedUpdateManyWithoutGuest_orderNestedInput
}

export type guest_ordersCreateManyInput = {
  id?: bigint | number
  session_id: string
  email: string
  address_line1: string
  address_line2?: string | null
  city: string
  state_province: string
  postal_code: string
  country: string
  phone?: string | null
  total_amount: number
  status?: string
  save_details_for_account?: boolean
  created_at?: Date | string
  updated_at?: Date | string
}

export type guest_ordersUpdateManyMutationInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  session_id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  address_line1?: Prisma.StringFieldUpdateOperationsInput | string
  address_line2?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  state_province?: Prisma.StringFieldUpdateOperationsInput | string
  postal_code?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.StringFieldUpdateOperationsInput | string
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  total_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  save_details_for_account?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type guest_ordersUncheckedUpdateManyInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  session_id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  address_line1?: Prisma.StringFieldUpdateOperationsInput | string
  address_line2?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  state_province?: Prisma.StringFieldUpdateOperationsInput | string
  postal_code?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.StringFieldUpdateOperationsInput | string
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  total_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  save_details_for_account?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type guest_ordersCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  session_id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  address_line1?: Prisma.SortOrder
  address_line2?: Prisma.SortOrder
  city?: Prisma.SortOrder
  state_province?: Prisma.SortOrder
  postal_code?: Prisma.SortOrder
  country?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  total_amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  save_details_for_account?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type guest_ordersAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  total_amount?: Prisma.SortOrder
}

export type guest_ordersMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  session_id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  address_line1?: Prisma.SortOrder
  address_line2?: Prisma.SortOrder
  city?: Prisma.SortOrder
  state_province?: Prisma.SortOrder
  postal_code?: Prisma.SortOrder
  country?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  total_amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  save_details_for_account?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type guest_ordersMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  session_id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  address_line1?: Prisma.SortOrder
  address_line2?: Prisma.SortOrder
  city?: Prisma.SortOrder
  state_province?: Prisma.SortOrder
  postal_code?: Prisma.SortOrder
  country?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  total_amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  save_details_for_account?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type guest_ordersSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  total_amount?: Prisma.SortOrder
}

export type Guest_ordersScalarRelationFilter = {
  is?: Prisma.guest_ordersWhereInput
  isNot?: Prisma.guest_ordersWhereInput
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type guest_ordersCreateNestedOneWithoutGuest_order_itemsInput = {
  create?: Prisma.XOR<Prisma.guest_ordersCreateWithoutGuest_order_itemsInput, Prisma.guest_ordersUncheckedCreateWithoutGuest_order_itemsInput>
  connectOrCreate?: Prisma.guest_ordersCreateOrConnectWithoutGuest_order_itemsInput
  connect?: Prisma.guest_ordersWhereUniqueInput
}

export type guest_ordersUpdateOneRequiredWithoutGuest_order_itemsNestedInput = {
  create?: Prisma.XOR<Prisma.guest_ordersCreateWithoutGuest_order_itemsInput, Prisma.guest_ordersUncheckedCreateWithoutGuest_order_itemsInput>
  connectOrCreate?: Prisma.guest_ordersCreateOrConnectWithoutGuest_order_itemsInput
  upsert?: Prisma.guest_ordersUpsertWithoutGuest_order_itemsInput
  connect?: Prisma.guest_ordersWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.guest_ordersUpdateToOneWithWhereWithoutGuest_order_itemsInput, Prisma.guest_ordersUpdateWithoutGuest_order_itemsInput>, Prisma.guest_ordersUncheckedUpdateWithoutGuest_order_itemsInput>
}

export type guest_ordersCreateWithoutGuest_order_itemsInput = {
  id?: bigint | number
  session_id: string
  email: string
  address_line1: string
  address_line2?: string | null
  city: string
  state_province: string
  postal_code: string
  country: string
  phone?: string | null
  total_amount: number
  status?: string
  save_details_for_account?: boolean
  created_at?: Date | string
  updated_at?: Date | string
}

export type guest_ordersUncheckedCreateWithoutGuest_order_itemsInput = {
  id?: bigint | number
  session_id: string
  email: string
  address_line1: string
  address_line2?: string | null
  city: string
  state_province: string
  postal_code: string
  country: string
  phone?: string | null
  total_amount: number
  status?: string
  save_details_for_account?: boolean
  created_at?: Date | string
  updated_at?: Date | string
}

export type guest_ordersCreateOrConnectWithoutGuest_order_itemsInput = {
  where: Prisma.guest_ordersWhereUniqueInput
  create: Prisma.XOR<Prisma.guest_ordersCreateWithoutGuest_order_itemsInput, Prisma.guest_ordersUncheckedCreateWithoutGuest_order_itemsInput>
}

export type guest_ordersUpsertWithoutGuest_order_itemsInput = {
  update: Prisma.XOR<Prisma.guest_ordersUpdateWithoutGuest_order_itemsInput, Prisma.guest_ordersUncheckedUpdateWithoutGuest_order_itemsInput>
  create: Prisma.XOR<Prisma.guest_ordersCreateWithoutGuest_order_itemsInput, Prisma.guest_ordersUncheckedCreateWithoutGuest_order_itemsInput>
  where?: Prisma.guest_ordersWhereInput
}

export type guest_ordersUpdateToOneWithWhereWithoutGuest_order_itemsInput = {
  where?: Prisma.guest_ordersWhereInput
  data: Prisma.XOR<Prisma.guest_ordersUpdateWithoutGuest_order_itemsInput, Prisma.guest_ordersUncheckedUpdateWithoutGuest_order_itemsInput>
}

export type guest_ordersUpdateWithoutGuest_order_itemsInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  session_id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  address_line1?: Prisma.StringFieldUpdateOperationsInput | string
  address_line2?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  state_province?: Prisma.StringFieldUpdateOperationsInput | string
  postal_code?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.StringFieldUpdateOperationsInput | string
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  total_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  save_details_for_account?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type guest_ordersUncheckedUpdateWithoutGuest_order_itemsInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  session_id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  address_line1?: Prisma.StringFieldUpdateOperationsInput | string
  address_line2?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  state_province?: Prisma.StringFieldUpdateOperationsInput | string
  postal_code?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.StringFieldUpdateOperationsInput | string
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  total_amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  save_details_for_account?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type Guest_ordersCountOutputType
 */

export type Guest_ordersCountOutputType = {
  guest_order_items: number
}

export type Guest_ordersCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  guest_order_items?: boolean | Guest_ordersCountOutputTypeCountGuest_order_itemsArgs
}

/**
 * Guest_ordersCountOutputType without action
 */
export type Guest_ordersCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Guest_ordersCountOutputType
   */
  select?: Prisma.Guest_ordersCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Guest_ordersCountOutputType without action
 */
export type Guest_ordersCountOutputTypeCountGuest_order_itemsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.guest_order_itemsWhereInput
}


export type guest_ordersSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  session_id?: boolean
  email?: boolean
  address_line1?: boolean
  address_line2?: boolean
  city?: boolean
  state_province?: boolean
  postal_code?: boolean
  country?: boolean
  phone?: boolean
  total_amount?: boolean
  status?: boolean
  save_details_for_account?: boolean
  created_at?: boolean
  updated_at?: boolean
  guest_order_items?: boolean | Prisma.guest_orders$guest_order_itemsArgs<ExtArgs>
  _count?: boolean | Prisma.Guest_ordersCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["guest_orders"]>

export type guest_ordersSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  session_id?: boolean
  email?: boolean
  address_line1?: boolean
  address_line2?: boolean
  city?: boolean
  state_province?: boolean
  postal_code?: boolean
  country?: boolean
  phone?: boolean
  total_amount?: boolean
  status?: boolean
  save_details_for_account?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["guest_orders"]>

export type guest_ordersSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  session_id?: boolean
  email?: boolean
  address_line1?: boolean
  address_line2?: boolean
  city?: boolean
  state_province?: boolean
  postal_code?: boolean
  country?: boolean
  phone?: boolean
  total_amount?: boolean
  status?: boolean
  save_details_for_account?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["guest_orders"]>

export type guest_ordersSelectScalar = {
  id?: boolean
  session_id?: boolean
  email?: boolean
  address_line1?: boolean
  address_line2?: boolean
  city?: boolean
  state_province?: boolean
  postal_code?: boolean
  country?: boolean
  phone?: boolean
  total_amount?: boolean
  status?: boolean
  save_details_for_account?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type guest_ordersOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "session_id" | "email" | "address_line1" | "address_line2" | "city" | "state_province" | "postal_code" | "country" | "phone" | "total_amount" | "status" | "save_details_for_account" | "created_at" | "updated_at", ExtArgs["result"]["guest_orders"]>
export type guest_ordersInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  guest_order_items?: boolean | Prisma.guest_orders$guest_order_itemsArgs<ExtArgs>
  _count?: boolean | Prisma.Guest_ordersCountOutputTypeDefaultArgs<ExtArgs>
}
export type guest_ordersIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type guest_ordersIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $guest_ordersPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "guest_orders"
  objects: {
    guest_order_items: Prisma.$guest_order_itemsPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: bigint
    session_id: string
    email: string
    address_line1: string
    address_line2: string | null
    city: string
    state_province: string
    postal_code: string
    country: string
    phone: string | null
    total_amount: number
    status: string
    save_details_for_account: boolean
    created_at: Date
    updated_at: Date
  }, ExtArgs["result"]["guest_orders"]>
  composites: {}
}

export type guest_ordersGetPayload<S extends boolean | null | undefined | guest_ordersDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload, S>

export type guest_ordersCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<guest_ordersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Guest_ordersCountAggregateInputType | true
  }

export interface guest_ordersDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['guest_orders'], meta: { name: 'guest_orders' } }
  /**
   * Find zero or one Guest_orders that matches the filter.
   * @param {guest_ordersFindUniqueArgs} args - Arguments to find a Guest_orders
   * @example
   * // Get one Guest_orders
   * const guest_orders = await prisma.guest_orders.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends guest_ordersFindUniqueArgs>(args: Prisma.SelectSubset<T, guest_ordersFindUniqueArgs<ExtArgs>>): Prisma.Prisma__guest_ordersClient<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Guest_orders that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {guest_ordersFindUniqueOrThrowArgs} args - Arguments to find a Guest_orders
   * @example
   * // Get one Guest_orders
   * const guest_orders = await prisma.guest_orders.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends guest_ordersFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, guest_ordersFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__guest_ordersClient<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Guest_orders that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {guest_ordersFindFirstArgs} args - Arguments to find a Guest_orders
   * @example
   * // Get one Guest_orders
   * const guest_orders = await prisma.guest_orders.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends guest_ordersFindFirstArgs>(args?: Prisma.SelectSubset<T, guest_ordersFindFirstArgs<ExtArgs>>): Prisma.Prisma__guest_ordersClient<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Guest_orders that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {guest_ordersFindFirstOrThrowArgs} args - Arguments to find a Guest_orders
   * @example
   * // Get one Guest_orders
   * const guest_orders = await prisma.guest_orders.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends guest_ordersFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, guest_ordersFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__guest_ordersClient<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Guest_orders that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {guest_ordersFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Guest_orders
   * const guest_orders = await prisma.guest_orders.findMany()
   * 
   * // Get first 10 Guest_orders
   * const guest_orders = await prisma.guest_orders.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const guest_ordersWithIdOnly = await prisma.guest_orders.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends guest_ordersFindManyArgs>(args?: Prisma.SelectSubset<T, guest_ordersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Guest_orders.
   * @param {guest_ordersCreateArgs} args - Arguments to create a Guest_orders.
   * @example
   * // Create one Guest_orders
   * const Guest_orders = await prisma.guest_orders.create({
   *   data: {
   *     // ... data to create a Guest_orders
   *   }
   * })
   * 
   */
  create<T extends guest_ordersCreateArgs>(args: Prisma.SelectSubset<T, guest_ordersCreateArgs<ExtArgs>>): Prisma.Prisma__guest_ordersClient<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Guest_orders.
   * @param {guest_ordersCreateManyArgs} args - Arguments to create many Guest_orders.
   * @example
   * // Create many Guest_orders
   * const guest_orders = await prisma.guest_orders.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends guest_ordersCreateManyArgs>(args?: Prisma.SelectSubset<T, guest_ordersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Guest_orders and returns the data saved in the database.
   * @param {guest_ordersCreateManyAndReturnArgs} args - Arguments to create many Guest_orders.
   * @example
   * // Create many Guest_orders
   * const guest_orders = await prisma.guest_orders.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Guest_orders and only return the `id`
   * const guest_ordersWithIdOnly = await prisma.guest_orders.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends guest_ordersCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, guest_ordersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Guest_orders.
   * @param {guest_ordersDeleteArgs} args - Arguments to delete one Guest_orders.
   * @example
   * // Delete one Guest_orders
   * const Guest_orders = await prisma.guest_orders.delete({
   *   where: {
   *     // ... filter to delete one Guest_orders
   *   }
   * })
   * 
   */
  delete<T extends guest_ordersDeleteArgs>(args: Prisma.SelectSubset<T, guest_ordersDeleteArgs<ExtArgs>>): Prisma.Prisma__guest_ordersClient<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Guest_orders.
   * @param {guest_ordersUpdateArgs} args - Arguments to update one Guest_orders.
   * @example
   * // Update one Guest_orders
   * const guest_orders = await prisma.guest_orders.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends guest_ordersUpdateArgs>(args: Prisma.SelectSubset<T, guest_ordersUpdateArgs<ExtArgs>>): Prisma.Prisma__guest_ordersClient<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Guest_orders.
   * @param {guest_ordersDeleteManyArgs} args - Arguments to filter Guest_orders to delete.
   * @example
   * // Delete a few Guest_orders
   * const { count } = await prisma.guest_orders.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends guest_ordersDeleteManyArgs>(args?: Prisma.SelectSubset<T, guest_ordersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Guest_orders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {guest_ordersUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Guest_orders
   * const guest_orders = await prisma.guest_orders.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends guest_ordersUpdateManyArgs>(args: Prisma.SelectSubset<T, guest_ordersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Guest_orders and returns the data updated in the database.
   * @param {guest_ordersUpdateManyAndReturnArgs} args - Arguments to update many Guest_orders.
   * @example
   * // Update many Guest_orders
   * const guest_orders = await prisma.guest_orders.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Guest_orders and only return the `id`
   * const guest_ordersWithIdOnly = await prisma.guest_orders.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends guest_ordersUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, guest_ordersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Guest_orders.
   * @param {guest_ordersUpsertArgs} args - Arguments to update or create a Guest_orders.
   * @example
   * // Update or create a Guest_orders
   * const guest_orders = await prisma.guest_orders.upsert({
   *   create: {
   *     // ... data to create a Guest_orders
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Guest_orders we want to update
   *   }
   * })
   */
  upsert<T extends guest_ordersUpsertArgs>(args: Prisma.SelectSubset<T, guest_ordersUpsertArgs<ExtArgs>>): Prisma.Prisma__guest_ordersClient<runtime.Types.Result.GetResult<Prisma.$guest_ordersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Guest_orders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {guest_ordersCountArgs} args - Arguments to filter Guest_orders to count.
   * @example
   * // Count the number of Guest_orders
   * const count = await prisma.guest_orders.count({
   *   where: {
   *     // ... the filter for the Guest_orders we want to count
   *   }
   * })
  **/
  count<T extends guest_ordersCountArgs>(
    args?: Prisma.Subset<T, guest_ordersCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Guest_ordersCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Guest_orders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Guest_ordersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Guest_ordersAggregateArgs>(args: Prisma.Subset<T, Guest_ordersAggregateArgs>): Prisma.PrismaPromise<GetGuest_ordersAggregateType<T>>

  /**
   * Group by Guest_orders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {guest_ordersGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends guest_ordersGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: guest_ordersGroupByArgs['orderBy'] }
      : { orderBy?: guest_ordersGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, guest_ordersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGuest_ordersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the guest_orders model
 */
readonly fields: guest_ordersFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for guest_orders.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__guest_ordersClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  guest_order_items<T extends Prisma.guest_orders$guest_order_itemsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.guest_orders$guest_order_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$guest_order_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the guest_orders model
 */
export interface guest_ordersFieldRefs {
  readonly id: Prisma.FieldRef<"guest_orders", 'BigInt'>
  readonly session_id: Prisma.FieldRef<"guest_orders", 'String'>
  readonly email: Prisma.FieldRef<"guest_orders", 'String'>
  readonly address_line1: Prisma.FieldRef<"guest_orders", 'String'>
  readonly address_line2: Prisma.FieldRef<"guest_orders", 'String'>
  readonly city: Prisma.FieldRef<"guest_orders", 'String'>
  readonly state_province: Prisma.FieldRef<"guest_orders", 'String'>
  readonly postal_code: Prisma.FieldRef<"guest_orders", 'String'>
  readonly country: Prisma.FieldRef<"guest_orders", 'String'>
  readonly phone: Prisma.FieldRef<"guest_orders", 'String'>
  readonly total_amount: Prisma.FieldRef<"guest_orders", 'Float'>
  readonly status: Prisma.FieldRef<"guest_orders", 'String'>
  readonly save_details_for_account: Prisma.FieldRef<"guest_orders", 'Boolean'>
  readonly created_at: Prisma.FieldRef<"guest_orders", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"guest_orders", 'DateTime'>
}
    

// Custom InputTypes
/**
 * guest_orders findUnique
 */
export type guest_ordersFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_ordersInclude<ExtArgs> | null
  /**
   * Filter, which guest_orders to fetch.
   */
  where: Prisma.guest_ordersWhereUniqueInput
}

/**
 * guest_orders findUniqueOrThrow
 */
export type guest_ordersFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_ordersInclude<ExtArgs> | null
  /**
   * Filter, which guest_orders to fetch.
   */
  where: Prisma.guest_ordersWhereUniqueInput
}

/**
 * guest_orders findFirst
 */
export type guest_ordersFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_ordersInclude<ExtArgs> | null
  /**
   * Filter, which guest_orders to fetch.
   */
  where?: Prisma.guest_ordersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of guest_orders to fetch.
   */
  orderBy?: Prisma.guest_ordersOrderByWithRelationInput | Prisma.guest_ordersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for guest_orders.
   */
  cursor?: Prisma.guest_ordersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` guest_orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` guest_orders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of guest_orders.
   */
  distinct?: Prisma.Guest_ordersScalarFieldEnum | Prisma.Guest_ordersScalarFieldEnum[]
}

/**
 * guest_orders findFirstOrThrow
 */
export type guest_ordersFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_ordersInclude<ExtArgs> | null
  /**
   * Filter, which guest_orders to fetch.
   */
  where?: Prisma.guest_ordersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of guest_orders to fetch.
   */
  orderBy?: Prisma.guest_ordersOrderByWithRelationInput | Prisma.guest_ordersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for guest_orders.
   */
  cursor?: Prisma.guest_ordersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` guest_orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` guest_orders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of guest_orders.
   */
  distinct?: Prisma.Guest_ordersScalarFieldEnum | Prisma.Guest_ordersScalarFieldEnum[]
}

/**
 * guest_orders findMany
 */
export type guest_ordersFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_ordersInclude<ExtArgs> | null
  /**
   * Filter, which guest_orders to fetch.
   */
  where?: Prisma.guest_ordersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of guest_orders to fetch.
   */
  orderBy?: Prisma.guest_ordersOrderByWithRelationInput | Prisma.guest_ordersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing guest_orders.
   */
  cursor?: Prisma.guest_ordersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` guest_orders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` guest_orders.
   */
  skip?: number
  distinct?: Prisma.Guest_ordersScalarFieldEnum | Prisma.Guest_ordersScalarFieldEnum[]
}

/**
 * guest_orders create
 */
export type guest_ordersCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_ordersInclude<ExtArgs> | null
  /**
   * The data needed to create a guest_orders.
   */
  data: Prisma.XOR<Prisma.guest_ordersCreateInput, Prisma.guest_ordersUncheckedCreateInput>
}

/**
 * guest_orders createMany
 */
export type guest_ordersCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many guest_orders.
   */
  data: Prisma.guest_ordersCreateManyInput | Prisma.guest_ordersCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * guest_orders createManyAndReturn
 */
export type guest_ordersCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * The data used to create many guest_orders.
   */
  data: Prisma.guest_ordersCreateManyInput | Prisma.guest_ordersCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * guest_orders update
 */
export type guest_ordersUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_ordersInclude<ExtArgs> | null
  /**
   * The data needed to update a guest_orders.
   */
  data: Prisma.XOR<Prisma.guest_ordersUpdateInput, Prisma.guest_ordersUncheckedUpdateInput>
  /**
   * Choose, which guest_orders to update.
   */
  where: Prisma.guest_ordersWhereUniqueInput
}

/**
 * guest_orders updateMany
 */
export type guest_ordersUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update guest_orders.
   */
  data: Prisma.XOR<Prisma.guest_ordersUpdateManyMutationInput, Prisma.guest_ordersUncheckedUpdateManyInput>
  /**
   * Filter which guest_orders to update
   */
  where?: Prisma.guest_ordersWhereInput
  /**
   * Limit how many guest_orders to update.
   */
  limit?: number
}

/**
 * guest_orders updateManyAndReturn
 */
export type guest_ordersUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * The data used to update guest_orders.
   */
  data: Prisma.XOR<Prisma.guest_ordersUpdateManyMutationInput, Prisma.guest_ordersUncheckedUpdateManyInput>
  /**
   * Filter which guest_orders to update
   */
  where?: Prisma.guest_ordersWhereInput
  /**
   * Limit how many guest_orders to update.
   */
  limit?: number
}

/**
 * guest_orders upsert
 */
export type guest_ordersUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_ordersInclude<ExtArgs> | null
  /**
   * The filter to search for the guest_orders to update in case it exists.
   */
  where: Prisma.guest_ordersWhereUniqueInput
  /**
   * In case the guest_orders found by the `where` argument doesn't exist, create a new guest_orders with this data.
   */
  create: Prisma.XOR<Prisma.guest_ordersCreateInput, Prisma.guest_ordersUncheckedCreateInput>
  /**
   * In case the guest_orders was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.guest_ordersUpdateInput, Prisma.guest_ordersUncheckedUpdateInput>
}

/**
 * guest_orders delete
 */
export type guest_ordersDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_ordersInclude<ExtArgs> | null
  /**
   * Filter which guest_orders to delete.
   */
  where: Prisma.guest_ordersWhereUniqueInput
}

/**
 * guest_orders deleteMany
 */
export type guest_ordersDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which guest_orders to delete
   */
  where?: Prisma.guest_ordersWhereInput
  /**
   * Limit how many guest_orders to delete.
   */
  limit?: number
}

/**
 * guest_orders.guest_order_items
 */
export type guest_orders$guest_order_itemsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_order_items
   */
  select?: Prisma.guest_order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_order_items
   */
  omit?: Prisma.guest_order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_order_itemsInclude<ExtArgs> | null
  where?: Prisma.guest_order_itemsWhereInput
  orderBy?: Prisma.guest_order_itemsOrderByWithRelationInput | Prisma.guest_order_itemsOrderByWithRelationInput[]
  cursor?: Prisma.guest_order_itemsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Guest_order_itemsScalarFieldEnum | Prisma.Guest_order_itemsScalarFieldEnum[]
}

/**
 * guest_orders without action
 */
export type guest_ordersDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the guest_orders
   */
  select?: Prisma.guest_ordersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the guest_orders
   */
  omit?: Prisma.guest_ordersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.guest_ordersInclude<ExtArgs> | null
}
