
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `order_items` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model order_items
 * 
 */
export type order_itemsModel = runtime.Types.Result.DefaultSelection<Prisma.$order_itemsPayload>

export type AggregateOrder_items = {
  _count: Order_itemsCountAggregateOutputType | null
  _avg: Order_itemsAvgAggregateOutputType | null
  _sum: Order_itemsSumAggregateOutputType | null
  _min: Order_itemsMinAggregateOutputType | null
  _max: Order_itemsMaxAggregateOutputType | null
}

export type Order_itemsAvgAggregateOutputType = {
  id: number | null
  order_id: number | null
  fragrance_id: number | null
  decant_size_id: number | null
  quantity: number | null
  price_per_item: number | null
}

export type Order_itemsSumAggregateOutputType = {
  id: bigint | null
  order_id: bigint | null
  fragrance_id: bigint | null
  decant_size_id: bigint | null
  quantity: number | null
  price_per_item: number | null
}

export type Order_itemsMinAggregateOutputType = {
  id: bigint | null
  order_id: bigint | null
  fragrance_id: bigint | null
  decant_size_id: bigint | null
  quantity: number | null
  price_per_item: number | null
}

export type Order_itemsMaxAggregateOutputType = {
  id: bigint | null
  order_id: bigint | null
  fragrance_id: bigint | null
  decant_size_id: bigint | null
  quantity: number | null
  price_per_item: number | null
}

export type Order_itemsCountAggregateOutputType = {
  id: number
  order_id: number
  fragrance_id: number
  decant_size_id: number
  quantity: number
  price_per_item: number
  _all: number
}


export type Order_itemsAvgAggregateInputType = {
  id?: true
  order_id?: true
  fragrance_id?: true
  decant_size_id?: true
  quantity?: true
  price_per_item?: true
}

export type Order_itemsSumAggregateInputType = {
  id?: true
  order_id?: true
  fragrance_id?: true
  decant_size_id?: true
  quantity?: true
  price_per_item?: true
}

export type Order_itemsMinAggregateInputType = {
  id?: true
  order_id?: true
  fragrance_id?: true
  decant_size_id?: true
  quantity?: true
  price_per_item?: true
}

export type Order_itemsMaxAggregateInputType = {
  id?: true
  order_id?: true
  fragrance_id?: true
  decant_size_id?: true
  quantity?: true
  price_per_item?: true
}

export type Order_itemsCountAggregateInputType = {
  id?: true
  order_id?: true
  fragrance_id?: true
  decant_size_id?: true
  quantity?: true
  price_per_item?: true
  _all?: true
}

export type Order_itemsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which order_items to aggregate.
   */
  where?: Prisma.order_itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_items to fetch.
   */
  orderBy?: Prisma.order_itemsOrderByWithRelationInput | Prisma.order_itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.order_itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned order_items
  **/
  _count?: true | Order_itemsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Order_itemsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Order_itemsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Order_itemsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Order_itemsMaxAggregateInputType
}

export type GetOrder_itemsAggregateType<T extends Order_itemsAggregateArgs> = {
      [P in keyof T & keyof AggregateOrder_items]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOrder_items[P]>
    : Prisma.GetScalarType<T[P], AggregateOrder_items[P]>
}




export type order_itemsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.order_itemsWhereInput
  orderBy?: Prisma.order_itemsOrderByWithAggregationInput | Prisma.order_itemsOrderByWithAggregationInput[]
  by: Prisma.Order_itemsScalarFieldEnum[] | Prisma.Order_itemsScalarFieldEnum
  having?: Prisma.order_itemsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Order_itemsCountAggregateInputType | true
  _avg?: Order_itemsAvgAggregateInputType
  _sum?: Order_itemsSumAggregateInputType
  _min?: Order_itemsMinAggregateInputType
  _max?: Order_itemsMaxAggregateInputType
}

export type Order_itemsGroupByOutputType = {
  id: bigint
  order_id: bigint
  fragrance_id: bigint
  decant_size_id: bigint
  quantity: number
  price_per_item: number
  _count: Order_itemsCountAggregateOutputType | null
  _avg: Order_itemsAvgAggregateOutputType | null
  _sum: Order_itemsSumAggregateOutputType | null
  _min: Order_itemsMinAggregateOutputType | null
  _max: Order_itemsMaxAggregateOutputType | null
}

type GetOrder_itemsGroupByPayload<T extends order_itemsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Order_itemsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Order_itemsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Order_itemsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Order_itemsGroupByOutputType[P]>
      }
    >
  >



export type order_itemsWhereInput = {
  AND?: Prisma.order_itemsWhereInput | Prisma.order_itemsWhereInput[]
  OR?: Prisma.order_itemsWhereInput[]
  NOT?: Prisma.order_itemsWhereInput | Prisma.order_itemsWhereInput[]
  id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  order_id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  fragrance_id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  decant_size_id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  quantity?: Prisma.IntFilter<"order_items"> | number
  price_per_item?: Prisma.FloatFilter<"order_items"> | number
  order?: Prisma.XOR<Prisma.OrdersScalarRelationFilter, Prisma.ordersWhereInput>
  fragrance?: Prisma.XOR<Prisma.FragrancesScalarRelationFilter, Prisma.fragrancesWhereInput>
  decant_size?: Prisma.XOR<Prisma.Decant_sizesScalarRelationFilter, Prisma.decant_sizesWhereInput>
}

export type order_itemsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  price_per_item?: Prisma.SortOrder
  order?: Prisma.ordersOrderByWithRelationInput
  fragrance?: Prisma.fragrancesOrderByWithRelationInput
  decant_size?: Prisma.decant_sizesOrderByWithRelationInput
}

export type order_itemsWhereUniqueInput = Prisma.AtLeast<{
  id?: bigint | number
  AND?: Prisma.order_itemsWhereInput | Prisma.order_itemsWhereInput[]
  OR?: Prisma.order_itemsWhereInput[]
  NOT?: Prisma.order_itemsWhereInput | Prisma.order_itemsWhereInput[]
  order_id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  fragrance_id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  decant_size_id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  quantity?: Prisma.IntFilter<"order_items"> | number
  price_per_item?: Prisma.FloatFilter<"order_items"> | number
  order?: Prisma.XOR<Prisma.OrdersScalarRelationFilter, Prisma.ordersWhereInput>
  fragrance?: Prisma.XOR<Prisma.FragrancesScalarRelationFilter, Prisma.fragrancesWhereInput>
  decant_size?: Prisma.XOR<Prisma.Decant_sizesScalarRelationFilter, Prisma.decant_sizesWhereInput>
}, "id">

export type order_itemsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  price_per_item?: Prisma.SortOrder
  _count?: Prisma.order_itemsCountOrderByAggregateInput
  _avg?: Prisma.order_itemsAvgOrderByAggregateInput
  _max?: Prisma.order_itemsMaxOrderByAggregateInput
  _min?: Prisma.order_itemsMinOrderByAggregateInput
  _sum?: Prisma.order_itemsSumOrderByAggregateInput
}

export type order_itemsScalarWhereWithAggregatesInput = {
  AND?: Prisma.order_itemsScalarWhereWithAggregatesInput | Prisma.order_itemsScalarWhereWithAggregatesInput[]
  OR?: Prisma.order_itemsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.order_itemsScalarWhereWithAggregatesInput | Prisma.order_itemsScalarWhereWithAggregatesInput[]
  id?: Prisma.BigIntWithAggregatesFilter<"order_items"> | bigint | number
  order_id?: Prisma.BigIntWithAggregatesFilter<"order_items"> | bigint | number
  fragrance_id?: Prisma.BigIntWithAggregatesFilter<"order_items"> | bigint | number
  decant_size_id?: Prisma.BigIntWithAggregatesFilter<"order_items"> | bigint | number
  quantity?: Prisma.IntWithAggregatesFilter<"order_items"> | number
  price_per_item?: Prisma.FloatWithAggregatesFilter<"order_items"> | number
}

export type order_itemsCreateInput = {
  id?: bigint | number
  quantity: number
  price_per_item: number
  order: Prisma.ordersCreateNestedOneWithoutOrder_itemsInput
  fragrance: Prisma.fragrancesCreateNestedOneWithoutOrder_itemsInput
  decant_size: Prisma.decant_sizesCreateNestedOneWithoutOrder_itemsInput
}

export type order_itemsUncheckedCreateInput = {
  id?: bigint | number
  order_id: bigint | number
  fragrance_id: bigint | number
  decant_size_id: bigint | number
  quantity: number
  price_per_item: number
}

export type order_itemsUpdateInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
  order?: Prisma.ordersUpdateOneRequiredWithoutOrder_itemsNestedInput
  fragrance?: Prisma.fragrancesUpdateOneRequiredWithoutOrder_itemsNestedInput
  decant_size?: Prisma.decant_sizesUpdateOneRequiredWithoutOrder_itemsNestedInput
}

export type order_itemsUncheckedUpdateInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  order_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
}

export type order_itemsCreateManyInput = {
  id?: bigint | number
  order_id: bigint | number
  fragrance_id: bigint | number
  decant_size_id: bigint | number
  quantity: number
  price_per_item: number
}

export type order_itemsUpdateManyMutationInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
}

export type order_itemsUncheckedUpdateManyInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  order_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
}

export type Order_itemsListRelationFilter = {
  every?: Prisma.order_itemsWhereInput
  some?: Prisma.order_itemsWhereInput
  none?: Prisma.order_itemsWhereInput
}

export type order_itemsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type order_itemsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  price_per_item?: Prisma.SortOrder
}

export type order_itemsAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  price_per_item?: Prisma.SortOrder
}

export type order_itemsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  price_per_item?: Prisma.SortOrder
}

export type order_itemsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  price_per_item?: Prisma.SortOrder
}

export type order_itemsSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  order_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  price_per_item?: Prisma.SortOrder
}

export type order_itemsCreateNestedManyWithoutFragranceInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutFragranceInput, Prisma.order_itemsUncheckedCreateWithoutFragranceInput> | Prisma.order_itemsCreateWithoutFragranceInput[] | Prisma.order_itemsUncheckedCreateWithoutFragranceInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutFragranceInput | Prisma.order_itemsCreateOrConnectWithoutFragranceInput[]
  createMany?: Prisma.order_itemsCreateManyFragranceInputEnvelope
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
}

export type order_itemsUncheckedCreateNestedManyWithoutFragranceInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutFragranceInput, Prisma.order_itemsUncheckedCreateWithoutFragranceInput> | Prisma.order_itemsCreateWithoutFragranceInput[] | Prisma.order_itemsUncheckedCreateWithoutFragranceInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutFragranceInput | Prisma.order_itemsCreateOrConnectWithoutFragranceInput[]
  createMany?: Prisma.order_itemsCreateManyFragranceInputEnvelope
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
}

export type order_itemsUpdateManyWithoutFragranceNestedInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutFragranceInput, Prisma.order_itemsUncheckedCreateWithoutFragranceInput> | Prisma.order_itemsCreateWithoutFragranceInput[] | Prisma.order_itemsUncheckedCreateWithoutFragranceInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutFragranceInput | Prisma.order_itemsCreateOrConnectWithoutFragranceInput[]
  upsert?: Prisma.order_itemsUpsertWithWhereUniqueWithoutFragranceInput | Prisma.order_itemsUpsertWithWhereUniqueWithoutFragranceInput[]
  createMany?: Prisma.order_itemsCreateManyFragranceInputEnvelope
  set?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  disconnect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  delete?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  update?: Prisma.order_itemsUpdateWithWhereUniqueWithoutFragranceInput | Prisma.order_itemsUpdateWithWhereUniqueWithoutFragranceInput[]
  updateMany?: Prisma.order_itemsUpdateManyWithWhereWithoutFragranceInput | Prisma.order_itemsUpdateManyWithWhereWithoutFragranceInput[]
  deleteMany?: Prisma.order_itemsScalarWhereInput | Prisma.order_itemsScalarWhereInput[]
}

export type order_itemsUncheckedUpdateManyWithoutFragranceNestedInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutFragranceInput, Prisma.order_itemsUncheckedCreateWithoutFragranceInput> | Prisma.order_itemsCreateWithoutFragranceInput[] | Prisma.order_itemsUncheckedCreateWithoutFragranceInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutFragranceInput | Prisma.order_itemsCreateOrConnectWithoutFragranceInput[]
  upsert?: Prisma.order_itemsUpsertWithWhereUniqueWithoutFragranceInput | Prisma.order_itemsUpsertWithWhereUniqueWithoutFragranceInput[]
  createMany?: Prisma.order_itemsCreateManyFragranceInputEnvelope
  set?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  disconnect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  delete?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  update?: Prisma.order_itemsUpdateWithWhereUniqueWithoutFragranceInput | Prisma.order_itemsUpdateWithWhereUniqueWithoutFragranceInput[]
  updateMany?: Prisma.order_itemsUpdateManyWithWhereWithoutFragranceInput | Prisma.order_itemsUpdateManyWithWhereWithoutFragranceInput[]
  deleteMany?: Prisma.order_itemsScalarWhereInput | Prisma.order_itemsScalarWhereInput[]
}

export type order_itemsCreateNestedManyWithoutDecant_sizeInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutDecant_sizeInput, Prisma.order_itemsUncheckedCreateWithoutDecant_sizeInput> | Prisma.order_itemsCreateWithoutDecant_sizeInput[] | Prisma.order_itemsUncheckedCreateWithoutDecant_sizeInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutDecant_sizeInput | Prisma.order_itemsCreateOrConnectWithoutDecant_sizeInput[]
  createMany?: Prisma.order_itemsCreateManyDecant_sizeInputEnvelope
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
}

export type order_itemsUncheckedCreateNestedManyWithoutDecant_sizeInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutDecant_sizeInput, Prisma.order_itemsUncheckedCreateWithoutDecant_sizeInput> | Prisma.order_itemsCreateWithoutDecant_sizeInput[] | Prisma.order_itemsUncheckedCreateWithoutDecant_sizeInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutDecant_sizeInput | Prisma.order_itemsCreateOrConnectWithoutDecant_sizeInput[]
  createMany?: Prisma.order_itemsCreateManyDecant_sizeInputEnvelope
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
}

export type order_itemsUpdateManyWithoutDecant_sizeNestedInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutDecant_sizeInput, Prisma.order_itemsUncheckedCreateWithoutDecant_sizeInput> | Prisma.order_itemsCreateWithoutDecant_sizeInput[] | Prisma.order_itemsUncheckedCreateWithoutDecant_sizeInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutDecant_sizeInput | Prisma.order_itemsCreateOrConnectWithoutDecant_sizeInput[]
  upsert?: Prisma.order_itemsUpsertWithWhereUniqueWithoutDecant_sizeInput | Prisma.order_itemsUpsertWithWhereUniqueWithoutDecant_sizeInput[]
  createMany?: Prisma.order_itemsCreateManyDecant_sizeInputEnvelope
  set?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  disconnect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  delete?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  update?: Prisma.order_itemsUpdateWithWhereUniqueWithoutDecant_sizeInput | Prisma.order_itemsUpdateWithWhereUniqueWithoutDecant_sizeInput[]
  updateMany?: Prisma.order_itemsUpdateManyWithWhereWithoutDecant_sizeInput | Prisma.order_itemsUpdateManyWithWhereWithoutDecant_sizeInput[]
  deleteMany?: Prisma.order_itemsScalarWhereInput | Prisma.order_itemsScalarWhereInput[]
}

export type order_itemsUncheckedUpdateManyWithoutDecant_sizeNestedInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutDecant_sizeInput, Prisma.order_itemsUncheckedCreateWithoutDecant_sizeInput> | Prisma.order_itemsCreateWithoutDecant_sizeInput[] | Prisma.order_itemsUncheckedCreateWithoutDecant_sizeInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutDecant_sizeInput | Prisma.order_itemsCreateOrConnectWithoutDecant_sizeInput[]
  upsert?: Prisma.order_itemsUpsertWithWhereUniqueWithoutDecant_sizeInput | Prisma.order_itemsUpsertWithWhereUniqueWithoutDecant_sizeInput[]
  createMany?: Prisma.order_itemsCreateManyDecant_sizeInputEnvelope
  set?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  disconnect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  delete?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  update?: Prisma.order_itemsUpdateWithWhereUniqueWithoutDecant_sizeInput | Prisma.order_itemsUpdateWithWhereUniqueWithoutDecant_sizeInput[]
  updateMany?: Prisma.order_itemsUpdateManyWithWhereWithoutDecant_sizeInput | Prisma.order_itemsUpdateManyWithWhereWithoutDecant_sizeInput[]
  deleteMany?: Prisma.order_itemsScalarWhereInput | Prisma.order_itemsScalarWhereInput[]
}

export type order_itemsCreateNestedManyWithoutOrderInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutOrderInput, Prisma.order_itemsUncheckedCreateWithoutOrderInput> | Prisma.order_itemsCreateWithoutOrderInput[] | Prisma.order_itemsUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutOrderInput | Prisma.order_itemsCreateOrConnectWithoutOrderInput[]
  createMany?: Prisma.order_itemsCreateManyOrderInputEnvelope
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
}

export type order_itemsUncheckedCreateNestedManyWithoutOrderInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutOrderInput, Prisma.order_itemsUncheckedCreateWithoutOrderInput> | Prisma.order_itemsCreateWithoutOrderInput[] | Prisma.order_itemsUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutOrderInput | Prisma.order_itemsCreateOrConnectWithoutOrderInput[]
  createMany?: Prisma.order_itemsCreateManyOrderInputEnvelope
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
}

export type order_itemsUpdateManyWithoutOrderNestedInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutOrderInput, Prisma.order_itemsUncheckedCreateWithoutOrderInput> | Prisma.order_itemsCreateWithoutOrderInput[] | Prisma.order_itemsUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutOrderInput | Prisma.order_itemsCreateOrConnectWithoutOrderInput[]
  upsert?: Prisma.order_itemsUpsertWithWhereUniqueWithoutOrderInput | Prisma.order_itemsUpsertWithWhereUniqueWithoutOrderInput[]
  createMany?: Prisma.order_itemsCreateManyOrderInputEnvelope
  set?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  disconnect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  delete?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  update?: Prisma.order_itemsUpdateWithWhereUniqueWithoutOrderInput | Prisma.order_itemsUpdateWithWhereUniqueWithoutOrderInput[]
  updateMany?: Prisma.order_itemsUpdateManyWithWhereWithoutOrderInput | Prisma.order_itemsUpdateManyWithWhereWithoutOrderInput[]
  deleteMany?: Prisma.order_itemsScalarWhereInput | Prisma.order_itemsScalarWhereInput[]
}

export type order_itemsUncheckedUpdateManyWithoutOrderNestedInput = {
  create?: Prisma.XOR<Prisma.order_itemsCreateWithoutOrderInput, Prisma.order_itemsUncheckedCreateWithoutOrderInput> | Prisma.order_itemsCreateWithoutOrderInput[] | Prisma.order_itemsUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.order_itemsCreateOrConnectWithoutOrderInput | Prisma.order_itemsCreateOrConnectWithoutOrderInput[]
  upsert?: Prisma.order_itemsUpsertWithWhereUniqueWithoutOrderInput | Prisma.order_itemsUpsertWithWhereUniqueWithoutOrderInput[]
  createMany?: Prisma.order_itemsCreateManyOrderInputEnvelope
  set?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  disconnect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  delete?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  connect?: Prisma.order_itemsWhereUniqueInput | Prisma.order_itemsWhereUniqueInput[]
  update?: Prisma.order_itemsUpdateWithWhereUniqueWithoutOrderInput | Prisma.order_itemsUpdateWithWhereUniqueWithoutOrderInput[]
  updateMany?: Prisma.order_itemsUpdateManyWithWhereWithoutOrderInput | Prisma.order_itemsUpdateManyWithWhereWithoutOrderInput[]
  deleteMany?: Prisma.order_itemsScalarWhereInput | Prisma.order_itemsScalarWhereInput[]
}

export type order_itemsCreateWithoutFragranceInput = {
  id?: bigint | number
  quantity: number
  price_per_item: number
  order: Prisma.ordersCreateNestedOneWithoutOrder_itemsInput
  decant_size: Prisma.decant_sizesCreateNestedOneWithoutOrder_itemsInput
}

export type order_itemsUncheckedCreateWithoutFragranceInput = {
  id?: bigint | number
  order_id: bigint | number
  decant_size_id: bigint | number
  quantity: number
  price_per_item: number
}

export type order_itemsCreateOrConnectWithoutFragranceInput = {
  where: Prisma.order_itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.order_itemsCreateWithoutFragranceInput, Prisma.order_itemsUncheckedCreateWithoutFragranceInput>
}

export type order_itemsCreateManyFragranceInputEnvelope = {
  data: Prisma.order_itemsCreateManyFragranceInput | Prisma.order_itemsCreateManyFragranceInput[]
  skipDuplicates?: boolean
}

export type order_itemsUpsertWithWhereUniqueWithoutFragranceInput = {
  where: Prisma.order_itemsWhereUniqueInput
  update: Prisma.XOR<Prisma.order_itemsUpdateWithoutFragranceInput, Prisma.order_itemsUncheckedUpdateWithoutFragranceInput>
  create: Prisma.XOR<Prisma.order_itemsCreateWithoutFragranceInput, Prisma.order_itemsUncheckedCreateWithoutFragranceInput>
}

export type order_itemsUpdateWithWhereUniqueWithoutFragranceInput = {
  where: Prisma.order_itemsWhereUniqueInput
  data: Prisma.XOR<Prisma.order_itemsUpdateWithoutFragranceInput, Prisma.order_itemsUncheckedUpdateWithoutFragranceInput>
}

export type order_itemsUpdateManyWithWhereWithoutFragranceInput = {
  where: Prisma.order_itemsScalarWhereInput
  data: Prisma.XOR<Prisma.order_itemsUpdateManyMutationInput, Prisma.order_itemsUncheckedUpdateManyWithoutFragranceInput>
}

export type order_itemsScalarWhereInput = {
  AND?: Prisma.order_itemsScalarWhereInput | Prisma.order_itemsScalarWhereInput[]
  OR?: Prisma.order_itemsScalarWhereInput[]
  NOT?: Prisma.order_itemsScalarWhereInput | Prisma.order_itemsScalarWhereInput[]
  id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  order_id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  fragrance_id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  decant_size_id?: Prisma.BigIntFilter<"order_items"> | bigint | number
  quantity?: Prisma.IntFilter<"order_items"> | number
  price_per_item?: Prisma.FloatFilter<"order_items"> | number
}

export type order_itemsCreateWithoutDecant_sizeInput = {
  id?: bigint | number
  quantity: number
  price_per_item: number
  order: Prisma.ordersCreateNestedOneWithoutOrder_itemsInput
  fragrance: Prisma.fragrancesCreateNestedOneWithoutOrder_itemsInput
}

export type order_itemsUncheckedCreateWithoutDecant_sizeInput = {
  id?: bigint | number
  order_id: bigint | number
  fragrance_id: bigint | number
  quantity: number
  price_per_item: number
}

export type order_itemsCreateOrConnectWithoutDecant_sizeInput = {
  where: Prisma.order_itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.order_itemsCreateWithoutDecant_sizeInput, Prisma.order_itemsUncheckedCreateWithoutDecant_sizeInput>
}

export type order_itemsCreateManyDecant_sizeInputEnvelope = {
  data: Prisma.order_itemsCreateManyDecant_sizeInput | Prisma.order_itemsCreateManyDecant_sizeInput[]
  skipDuplicates?: boolean
}

export type order_itemsUpsertWithWhereUniqueWithoutDecant_sizeInput = {
  where: Prisma.order_itemsWhereUniqueInput
  update: Prisma.XOR<Prisma.order_itemsUpdateWithoutDecant_sizeInput, Prisma.order_itemsUncheckedUpdateWithoutDecant_sizeInput>
  create: Prisma.XOR<Prisma.order_itemsCreateWithoutDecant_sizeInput, Prisma.order_itemsUncheckedCreateWithoutDecant_sizeInput>
}

export type order_itemsUpdateWithWhereUniqueWithoutDecant_sizeInput = {
  where: Prisma.order_itemsWhereUniqueInput
  data: Prisma.XOR<Prisma.order_itemsUpdateWithoutDecant_sizeInput, Prisma.order_itemsUncheckedUpdateWithoutDecant_sizeInput>
}

export type order_itemsUpdateManyWithWhereWithoutDecant_sizeInput = {
  where: Prisma.order_itemsScalarWhereInput
  data: Prisma.XOR<Prisma.order_itemsUpdateManyMutationInput, Prisma.order_itemsUncheckedUpdateManyWithoutDecant_sizeInput>
}

export type order_itemsCreateWithoutOrderInput = {
  id?: bigint | number
  quantity: number
  price_per_item: number
  fragrance: Prisma.fragrancesCreateNestedOneWithoutOrder_itemsInput
  decant_size: Prisma.decant_sizesCreateNestedOneWithoutOrder_itemsInput
}

export type order_itemsUncheckedCreateWithoutOrderInput = {
  id?: bigint | number
  fragrance_id: bigint | number
  decant_size_id: bigint | number
  quantity: number
  price_per_item: number
}

export type order_itemsCreateOrConnectWithoutOrderInput = {
  where: Prisma.order_itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.order_itemsCreateWithoutOrderInput, Prisma.order_itemsUncheckedCreateWithoutOrderInput>
}

export type order_itemsCreateManyOrderInputEnvelope = {
  data: Prisma.order_itemsCreateManyOrderInput | Prisma.order_itemsCreateManyOrderInput[]
  skipDuplicates?: boolean
}

export type order_itemsUpsertWithWhereUniqueWithoutOrderInput = {
  where: Prisma.order_itemsWhereUniqueInput
  update: Prisma.XOR<Prisma.order_itemsUpdateWithoutOrderInput, Prisma.order_itemsUncheckedUpdateWithoutOrderInput>
  create: Prisma.XOR<Prisma.order_itemsCreateWithoutOrderInput, Prisma.order_itemsUncheckedCreateWithoutOrderInput>
}

export type order_itemsUpdateWithWhereUniqueWithoutOrderInput = {
  where: Prisma.order_itemsWhereUniqueInput
  data: Prisma.XOR<Prisma.order_itemsUpdateWithoutOrderInput, Prisma.order_itemsUncheckedUpdateWithoutOrderInput>
}

export type order_itemsUpdateManyWithWhereWithoutOrderInput = {
  where: Prisma.order_itemsScalarWhereInput
  data: Prisma.XOR<Prisma.order_itemsUpdateManyMutationInput, Prisma.order_itemsUncheckedUpdateManyWithoutOrderInput>
}

export type order_itemsCreateManyFragranceInput = {
  id?: bigint | number
  order_id: bigint | number
  decant_size_id: bigint | number
  quantity: number
  price_per_item: number
}

export type order_itemsUpdateWithoutFragranceInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
  order?: Prisma.ordersUpdateOneRequiredWithoutOrder_itemsNestedInput
  decant_size?: Prisma.decant_sizesUpdateOneRequiredWithoutOrder_itemsNestedInput
}

export type order_itemsUncheckedUpdateWithoutFragranceInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  order_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
}

export type order_itemsUncheckedUpdateManyWithoutFragranceInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  order_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
}

export type order_itemsCreateManyDecant_sizeInput = {
  id?: bigint | number
  order_id: bigint | number
  fragrance_id: bigint | number
  quantity: number
  price_per_item: number
}

export type order_itemsUpdateWithoutDecant_sizeInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
  order?: Prisma.ordersUpdateOneRequiredWithoutOrder_itemsNestedInput
  fragrance?: Prisma.fragrancesUpdateOneRequiredWithoutOrder_itemsNestedInput
}

export type order_itemsUncheckedUpdateWithoutDecant_sizeInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  order_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
}

export type order_itemsUncheckedUpdateManyWithoutDecant_sizeInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  order_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
}

export type order_itemsCreateManyOrderInput = {
  id?: bigint | number
  fragrance_id: bigint | number
  decant_size_id: bigint | number
  quantity: number
  price_per_item: number
}

export type order_itemsUpdateWithoutOrderInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
  fragrance?: Prisma.fragrancesUpdateOneRequiredWithoutOrder_itemsNestedInput
  decant_size?: Prisma.decant_sizesUpdateOneRequiredWithoutOrder_itemsNestedInput
}

export type order_itemsUncheckedUpdateWithoutOrderInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
}

export type order_itemsUncheckedUpdateManyWithoutOrderInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  price_per_item?: Prisma.FloatFieldUpdateOperationsInput | number
}



export type order_itemsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  order_id?: boolean
  fragrance_id?: boolean
  decant_size_id?: boolean
  quantity?: boolean
  price_per_item?: boolean
  order?: boolean | Prisma.ordersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order_items"]>

export type order_itemsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  order_id?: boolean
  fragrance_id?: boolean
  decant_size_id?: boolean
  quantity?: boolean
  price_per_item?: boolean
  order?: boolean | Prisma.ordersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order_items"]>

export type order_itemsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  order_id?: boolean
  fragrance_id?: boolean
  decant_size_id?: boolean
  quantity?: boolean
  price_per_item?: boolean
  order?: boolean | Prisma.ordersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}, ExtArgs["result"]["order_items"]>

export type order_itemsSelectScalar = {
  id?: boolean
  order_id?: boolean
  fragrance_id?: boolean
  decant_size_id?: boolean
  quantity?: boolean
  price_per_item?: boolean
}

export type order_itemsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "order_id" | "fragrance_id" | "decant_size_id" | "quantity" | "price_per_item", ExtArgs["result"]["order_items"]>
export type order_itemsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order?: boolean | Prisma.ordersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}
export type order_itemsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order?: boolean | Prisma.ordersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}
export type order_itemsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  order?: boolean | Prisma.ordersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}

export type $order_itemsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "order_items"
  objects: {
    order: Prisma.$ordersPayload<ExtArgs>
    fragrance: Prisma.$fragrancesPayload<ExtArgs>
    decant_size: Prisma.$decant_sizesPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: bigint
    order_id: bigint
    fragrance_id: bigint
    decant_size_id: bigint
    quantity: number
    price_per_item: number
  }, ExtArgs["result"]["order_items"]>
  composites: {}
}

export type order_itemsGetPayload<S extends boolean | null | undefined | order_itemsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$order_itemsPayload, S>

export type order_itemsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<order_itemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Order_itemsCountAggregateInputType | true
  }

export interface order_itemsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_items'], meta: { name: 'order_items' } }
  /**
   * Find zero or one Order_items that matches the filter.
   * @param {order_itemsFindUniqueArgs} args - Arguments to find a Order_items
   * @example
   * // Get one Order_items
   * const order_items = await prisma.order_items.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends order_itemsFindUniqueArgs>(args: Prisma.SelectSubset<T, order_itemsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__order_itemsClient<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Order_items that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {order_itemsFindUniqueOrThrowArgs} args - Arguments to find a Order_items
   * @example
   * // Get one Order_items
   * const order_items = await prisma.order_items.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends order_itemsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, order_itemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__order_itemsClient<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Order_items that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_itemsFindFirstArgs} args - Arguments to find a Order_items
   * @example
   * // Get one Order_items
   * const order_items = await prisma.order_items.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends order_itemsFindFirstArgs>(args?: Prisma.SelectSubset<T, order_itemsFindFirstArgs<ExtArgs>>): Prisma.Prisma__order_itemsClient<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Order_items that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_itemsFindFirstOrThrowArgs} args - Arguments to find a Order_items
   * @example
   * // Get one Order_items
   * const order_items = await prisma.order_items.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends order_itemsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, order_itemsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__order_itemsClient<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Order_items that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_itemsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Order_items
   * const order_items = await prisma.order_items.findMany()
   * 
   * // Get first 10 Order_items
   * const order_items = await prisma.order_items.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const order_itemsWithIdOnly = await prisma.order_items.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends order_itemsFindManyArgs>(args?: Prisma.SelectSubset<T, order_itemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Order_items.
   * @param {order_itemsCreateArgs} args - Arguments to create a Order_items.
   * @example
   * // Create one Order_items
   * const Order_items = await prisma.order_items.create({
   *   data: {
   *     // ... data to create a Order_items
   *   }
   * })
   * 
   */
  create<T extends order_itemsCreateArgs>(args: Prisma.SelectSubset<T, order_itemsCreateArgs<ExtArgs>>): Prisma.Prisma__order_itemsClient<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Order_items.
   * @param {order_itemsCreateManyArgs} args - Arguments to create many Order_items.
   * @example
   * // Create many Order_items
   * const order_items = await prisma.order_items.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends order_itemsCreateManyArgs>(args?: Prisma.SelectSubset<T, order_itemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Order_items and returns the data saved in the database.
   * @param {order_itemsCreateManyAndReturnArgs} args - Arguments to create many Order_items.
   * @example
   * // Create many Order_items
   * const order_items = await prisma.order_items.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Order_items and only return the `id`
   * const order_itemsWithIdOnly = await prisma.order_items.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends order_itemsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, order_itemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Order_items.
   * @param {order_itemsDeleteArgs} args - Arguments to delete one Order_items.
   * @example
   * // Delete one Order_items
   * const Order_items = await prisma.order_items.delete({
   *   where: {
   *     // ... filter to delete one Order_items
   *   }
   * })
   * 
   */
  delete<T extends order_itemsDeleteArgs>(args: Prisma.SelectSubset<T, order_itemsDeleteArgs<ExtArgs>>): Prisma.Prisma__order_itemsClient<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Order_items.
   * @param {order_itemsUpdateArgs} args - Arguments to update one Order_items.
   * @example
   * // Update one Order_items
   * const order_items = await prisma.order_items.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends order_itemsUpdateArgs>(args: Prisma.SelectSubset<T, order_itemsUpdateArgs<ExtArgs>>): Prisma.Prisma__order_itemsClient<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Order_items.
   * @param {order_itemsDeleteManyArgs} args - Arguments to filter Order_items to delete.
   * @example
   * // Delete a few Order_items
   * const { count } = await prisma.order_items.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends order_itemsDeleteManyArgs>(args?: Prisma.SelectSubset<T, order_itemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Order_items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_itemsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Order_items
   * const order_items = await prisma.order_items.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends order_itemsUpdateManyArgs>(args: Prisma.SelectSubset<T, order_itemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Order_items and returns the data updated in the database.
   * @param {order_itemsUpdateManyAndReturnArgs} args - Arguments to update many Order_items.
   * @example
   * // Update many Order_items
   * const order_items = await prisma.order_items.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Order_items and only return the `id`
   * const order_itemsWithIdOnly = await prisma.order_items.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends order_itemsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, order_itemsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Order_items.
   * @param {order_itemsUpsertArgs} args - Arguments to update or create a Order_items.
   * @example
   * // Update or create a Order_items
   * const order_items = await prisma.order_items.upsert({
   *   create: {
   *     // ... data to create a Order_items
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Order_items we want to update
   *   }
   * })
   */
  upsert<T extends order_itemsUpsertArgs>(args: Prisma.SelectSubset<T, order_itemsUpsertArgs<ExtArgs>>): Prisma.Prisma__order_itemsClient<runtime.Types.Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Order_items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_itemsCountArgs} args - Arguments to filter Order_items to count.
   * @example
   * // Count the number of Order_items
   * const count = await prisma.order_items.count({
   *   where: {
   *     // ... the filter for the Order_items we want to count
   *   }
   * })
  **/
  count<T extends order_itemsCountArgs>(
    args?: Prisma.Subset<T, order_itemsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Order_itemsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Order_items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Order_itemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Order_itemsAggregateArgs>(args: Prisma.Subset<T, Order_itemsAggregateArgs>): Prisma.PrismaPromise<GetOrder_itemsAggregateType<T>>

  /**
   * Group by Order_items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {order_itemsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends order_itemsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: order_itemsGroupByArgs['orderBy'] }
      : { orderBy?: order_itemsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, order_itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_itemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the order_items model
 */
readonly fields: order_itemsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for order_items.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__order_itemsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  order<T extends Prisma.ordersDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ordersDefaultArgs<ExtArgs>>): Prisma.Prisma__ordersClient<runtime.Types.Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  fragrance<T extends Prisma.fragrancesDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.fragrancesDefaultArgs<ExtArgs>>): Prisma.Prisma__fragrancesClient<runtime.Types.Result.GetResult<Prisma.$fragrancesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  decant_size<T extends Prisma.decant_sizesDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.decant_sizesDefaultArgs<ExtArgs>>): Prisma.Prisma__decant_sizesClient<runtime.Types.Result.GetResult<Prisma.$decant_sizesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the order_items model
 */
export interface order_itemsFieldRefs {
  readonly id: Prisma.FieldRef<"order_items", 'BigInt'>
  readonly order_id: Prisma.FieldRef<"order_items", 'BigInt'>
  readonly fragrance_id: Prisma.FieldRef<"order_items", 'BigInt'>
  readonly decant_size_id: Prisma.FieldRef<"order_items", 'BigInt'>
  readonly quantity: Prisma.FieldRef<"order_items", 'Int'>
  readonly price_per_item: Prisma.FieldRef<"order_items", 'Float'>
}
    

// Custom InputTypes
/**
 * order_items findUnique
 */
export type order_itemsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsInclude<ExtArgs> | null
  /**
   * Filter, which order_items to fetch.
   */
  where: Prisma.order_itemsWhereUniqueInput
}

/**
 * order_items findUniqueOrThrow
 */
export type order_itemsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsInclude<ExtArgs> | null
  /**
   * Filter, which order_items to fetch.
   */
  where: Prisma.order_itemsWhereUniqueInput
}

/**
 * order_items findFirst
 */
export type order_itemsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsInclude<ExtArgs> | null
  /**
   * Filter, which order_items to fetch.
   */
  where?: Prisma.order_itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_items to fetch.
   */
  orderBy?: Prisma.order_itemsOrderByWithRelationInput | Prisma.order_itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for order_items.
   */
  cursor?: Prisma.order_itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of order_items.
   */
  distinct?: Prisma.Order_itemsScalarFieldEnum | Prisma.Order_itemsScalarFieldEnum[]
}

/**
 * order_items findFirstOrThrow
 */
export type order_itemsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsInclude<ExtArgs> | null
  /**
   * Filter, which order_items to fetch.
   */
  where?: Prisma.order_itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_items to fetch.
   */
  orderBy?: Prisma.order_itemsOrderByWithRelationInput | Prisma.order_itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for order_items.
   */
  cursor?: Prisma.order_itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of order_items.
   */
  distinct?: Prisma.Order_itemsScalarFieldEnum | Prisma.Order_itemsScalarFieldEnum[]
}

/**
 * order_items findMany
 */
export type order_itemsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsInclude<ExtArgs> | null
  /**
   * Filter, which order_items to fetch.
   */
  where?: Prisma.order_itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of order_items to fetch.
   */
  orderBy?: Prisma.order_itemsOrderByWithRelationInput | Prisma.order_itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing order_items.
   */
  cursor?: Prisma.order_itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` order_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` order_items.
   */
  skip?: number
  distinct?: Prisma.Order_itemsScalarFieldEnum | Prisma.Order_itemsScalarFieldEnum[]
}

/**
 * order_items create
 */
export type order_itemsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsInclude<ExtArgs> | null
  /**
   * The data needed to create a order_items.
   */
  data: Prisma.XOR<Prisma.order_itemsCreateInput, Prisma.order_itemsUncheckedCreateInput>
}

/**
 * order_items createMany
 */
export type order_itemsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many order_items.
   */
  data: Prisma.order_itemsCreateManyInput | Prisma.order_itemsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * order_items createManyAndReturn
 */
export type order_itemsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * The data used to create many order_items.
   */
  data: Prisma.order_itemsCreateManyInput | Prisma.order_itemsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * order_items update
 */
export type order_itemsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsInclude<ExtArgs> | null
  /**
   * The data needed to update a order_items.
   */
  data: Prisma.XOR<Prisma.order_itemsUpdateInput, Prisma.order_itemsUncheckedUpdateInput>
  /**
   * Choose, which order_items to update.
   */
  where: Prisma.order_itemsWhereUniqueInput
}

/**
 * order_items updateMany
 */
export type order_itemsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update order_items.
   */
  data: Prisma.XOR<Prisma.order_itemsUpdateManyMutationInput, Prisma.order_itemsUncheckedUpdateManyInput>
  /**
   * Filter which order_items to update
   */
  where?: Prisma.order_itemsWhereInput
  /**
   * Limit how many order_items to update.
   */
  limit?: number
}

/**
 * order_items updateManyAndReturn
 */
export type order_itemsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * The data used to update order_items.
   */
  data: Prisma.XOR<Prisma.order_itemsUpdateManyMutationInput, Prisma.order_itemsUncheckedUpdateManyInput>
  /**
   * Filter which order_items to update
   */
  where?: Prisma.order_itemsWhereInput
  /**
   * Limit how many order_items to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * order_items upsert
 */
export type order_itemsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsInclude<ExtArgs> | null
  /**
   * The filter to search for the order_items to update in case it exists.
   */
  where: Prisma.order_itemsWhereUniqueInput
  /**
   * In case the order_items found by the `where` argument doesn't exist, create a new order_items with this data.
   */
  create: Prisma.XOR<Prisma.order_itemsCreateInput, Prisma.order_itemsUncheckedCreateInput>
  /**
   * In case the order_items was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.order_itemsUpdateInput, Prisma.order_itemsUncheckedUpdateInput>
}

/**
 * order_items delete
 */
export type order_itemsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsInclude<ExtArgs> | null
  /**
   * Filter which order_items to delete.
   */
  where: Prisma.order_itemsWhereUniqueInput
}

/**
 * order_items deleteMany
 */
export type order_itemsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which order_items to delete
   */
  where?: Prisma.order_itemsWhereInput
  /**
   * Limit how many order_items to delete.
   */
  limit?: number
}

/**
 * order_items without action
 */
export type order_itemsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the order_items
   */
  select?: Prisma.order_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the order_items
   */
  omit?: Prisma.order_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.order_itemsInclude<ExtArgs> | null
}
