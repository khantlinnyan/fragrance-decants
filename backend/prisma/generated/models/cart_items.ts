
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `cart_items` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model cart_items
 * 
 */
export type cart_itemsModel = runtime.Types.Result.DefaultSelection<Prisma.$cart_itemsPayload>

export type AggregateCart_items = {
  _count: Cart_itemsCountAggregateOutputType | null
  _avg: Cart_itemsAvgAggregateOutputType | null
  _sum: Cart_itemsSumAggregateOutputType | null
  _min: Cart_itemsMinAggregateOutputType | null
  _max: Cart_itemsMaxAggregateOutputType | null
}

export type Cart_itemsAvgAggregateOutputType = {
  id: number | null
  user_id: number | null
  fragrance_id: number | null
  decant_size_id: number | null
  quantity: number | null
}

export type Cart_itemsSumAggregateOutputType = {
  id: bigint | null
  user_id: bigint | null
  fragrance_id: bigint | null
  decant_size_id: bigint | null
  quantity: number | null
}

export type Cart_itemsMinAggregateOutputType = {
  id: bigint | null
  user_id: bigint | null
  fragrance_id: bigint | null
  decant_size_id: bigint | null
  quantity: number | null
  created_at: Date | null
}

export type Cart_itemsMaxAggregateOutputType = {
  id: bigint | null
  user_id: bigint | null
  fragrance_id: bigint | null
  decant_size_id: bigint | null
  quantity: number | null
  created_at: Date | null
}

export type Cart_itemsCountAggregateOutputType = {
  id: number
  user_id: number
  fragrance_id: number
  decant_size_id: number
  quantity: number
  created_at: number
  _all: number
}


export type Cart_itemsAvgAggregateInputType = {
  id?: true
  user_id?: true
  fragrance_id?: true
  decant_size_id?: true
  quantity?: true
}

export type Cart_itemsSumAggregateInputType = {
  id?: true
  user_id?: true
  fragrance_id?: true
  decant_size_id?: true
  quantity?: true
}

export type Cart_itemsMinAggregateInputType = {
  id?: true
  user_id?: true
  fragrance_id?: true
  decant_size_id?: true
  quantity?: true
  created_at?: true
}

export type Cart_itemsMaxAggregateInputType = {
  id?: true
  user_id?: true
  fragrance_id?: true
  decant_size_id?: true
  quantity?: true
  created_at?: true
}

export type Cart_itemsCountAggregateInputType = {
  id?: true
  user_id?: true
  fragrance_id?: true
  decant_size_id?: true
  quantity?: true
  created_at?: true
  _all?: true
}

export type Cart_itemsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which cart_items to aggregate.
   */
  where?: Prisma.cart_itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cart_items to fetch.
   */
  orderBy?: Prisma.cart_itemsOrderByWithRelationInput | Prisma.cart_itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.cart_itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cart_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cart_items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned cart_items
  **/
  _count?: true | Cart_itemsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Cart_itemsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Cart_itemsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Cart_itemsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Cart_itemsMaxAggregateInputType
}

export type GetCart_itemsAggregateType<T extends Cart_itemsAggregateArgs> = {
      [P in keyof T & keyof AggregateCart_items]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCart_items[P]>
    : Prisma.GetScalarType<T[P], AggregateCart_items[P]>
}




export type cart_itemsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.cart_itemsWhereInput
  orderBy?: Prisma.cart_itemsOrderByWithAggregationInput | Prisma.cart_itemsOrderByWithAggregationInput[]
  by: Prisma.Cart_itemsScalarFieldEnum[] | Prisma.Cart_itemsScalarFieldEnum
  having?: Prisma.cart_itemsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Cart_itemsCountAggregateInputType | true
  _avg?: Cart_itemsAvgAggregateInputType
  _sum?: Cart_itemsSumAggregateInputType
  _min?: Cart_itemsMinAggregateInputType
  _max?: Cart_itemsMaxAggregateInputType
}

export type Cart_itemsGroupByOutputType = {
  id: bigint
  user_id: bigint
  fragrance_id: bigint
  decant_size_id: bigint
  quantity: number
  created_at: Date
  _count: Cart_itemsCountAggregateOutputType | null
  _avg: Cart_itemsAvgAggregateOutputType | null
  _sum: Cart_itemsSumAggregateOutputType | null
  _min: Cart_itemsMinAggregateOutputType | null
  _max: Cart_itemsMaxAggregateOutputType | null
}

type GetCart_itemsGroupByPayload<T extends cart_itemsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Cart_itemsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Cart_itemsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Cart_itemsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Cart_itemsGroupByOutputType[P]>
      }
    >
  >



export type cart_itemsWhereInput = {
  AND?: Prisma.cart_itemsWhereInput | Prisma.cart_itemsWhereInput[]
  OR?: Prisma.cart_itemsWhereInput[]
  NOT?: Prisma.cart_itemsWhereInput | Prisma.cart_itemsWhereInput[]
  id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  user_id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  fragrance_id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  decant_size_id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  quantity?: Prisma.IntFilter<"cart_items"> | number
  created_at?: Prisma.DateTimeFilter<"cart_items"> | Date | string
  user?: Prisma.XOR<Prisma.UsersScalarRelationFilter, Prisma.usersWhereInput>
  fragrance?: Prisma.XOR<Prisma.FragrancesScalarRelationFilter, Prisma.fragrancesWhereInput>
  decant_size?: Prisma.XOR<Prisma.Decant_sizesScalarRelationFilter, Prisma.decant_sizesWhereInput>
}

export type cart_itemsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  user?: Prisma.usersOrderByWithRelationInput
  fragrance?: Prisma.fragrancesOrderByWithRelationInput
  decant_size?: Prisma.decant_sizesOrderByWithRelationInput
}

export type cart_itemsWhereUniqueInput = Prisma.AtLeast<{
  id?: bigint | number
  user_id_fragrance_id_decant_size_id?: Prisma.cart_itemsUser_idFragrance_idDecant_size_idCompoundUniqueInput
  AND?: Prisma.cart_itemsWhereInput | Prisma.cart_itemsWhereInput[]
  OR?: Prisma.cart_itemsWhereInput[]
  NOT?: Prisma.cart_itemsWhereInput | Prisma.cart_itemsWhereInput[]
  user_id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  fragrance_id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  decant_size_id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  quantity?: Prisma.IntFilter<"cart_items"> | number
  created_at?: Prisma.DateTimeFilter<"cart_items"> | Date | string
  user?: Prisma.XOR<Prisma.UsersScalarRelationFilter, Prisma.usersWhereInput>
  fragrance?: Prisma.XOR<Prisma.FragrancesScalarRelationFilter, Prisma.fragrancesWhereInput>
  decant_size?: Prisma.XOR<Prisma.Decant_sizesScalarRelationFilter, Prisma.decant_sizesWhereInput>
}, "id" | "user_id_fragrance_id_decant_size_id">

export type cart_itemsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  _count?: Prisma.cart_itemsCountOrderByAggregateInput
  _avg?: Prisma.cart_itemsAvgOrderByAggregateInput
  _max?: Prisma.cart_itemsMaxOrderByAggregateInput
  _min?: Prisma.cart_itemsMinOrderByAggregateInput
  _sum?: Prisma.cart_itemsSumOrderByAggregateInput
}

export type cart_itemsScalarWhereWithAggregatesInput = {
  AND?: Prisma.cart_itemsScalarWhereWithAggregatesInput | Prisma.cart_itemsScalarWhereWithAggregatesInput[]
  OR?: Prisma.cart_itemsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.cart_itemsScalarWhereWithAggregatesInput | Prisma.cart_itemsScalarWhereWithAggregatesInput[]
  id?: Prisma.BigIntWithAggregatesFilter<"cart_items"> | bigint | number
  user_id?: Prisma.BigIntWithAggregatesFilter<"cart_items"> | bigint | number
  fragrance_id?: Prisma.BigIntWithAggregatesFilter<"cart_items"> | bigint | number
  decant_size_id?: Prisma.BigIntWithAggregatesFilter<"cart_items"> | bigint | number
  quantity?: Prisma.IntWithAggregatesFilter<"cart_items"> | number
  created_at?: Prisma.DateTimeWithAggregatesFilter<"cart_items"> | Date | string
}

export type cart_itemsCreateInput = {
  id?: bigint | number
  quantity?: number
  created_at?: Date | string
  user: Prisma.usersCreateNestedOneWithoutCart_itemsInput
  fragrance: Prisma.fragrancesCreateNestedOneWithoutCart_itemsInput
  decant_size: Prisma.decant_sizesCreateNestedOneWithoutCart_itemsInput
}

export type cart_itemsUncheckedCreateInput = {
  id?: bigint | number
  user_id: bigint | number
  fragrance_id: bigint | number
  decant_size_id: bigint | number
  quantity?: number
  created_at?: Date | string
}

export type cart_itemsUpdateInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.usersUpdateOneRequiredWithoutCart_itemsNestedInput
  fragrance?: Prisma.fragrancesUpdateOneRequiredWithoutCart_itemsNestedInput
  decant_size?: Prisma.decant_sizesUpdateOneRequiredWithoutCart_itemsNestedInput
}

export type cart_itemsUncheckedUpdateInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cart_itemsCreateManyInput = {
  id?: bigint | number
  user_id: bigint | number
  fragrance_id: bigint | number
  decant_size_id: bigint | number
  quantity?: number
  created_at?: Date | string
}

export type cart_itemsUpdateManyMutationInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cart_itemsUncheckedUpdateManyInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type Cart_itemsListRelationFilter = {
  every?: Prisma.cart_itemsWhereInput
  some?: Prisma.cart_itemsWhereInput
  none?: Prisma.cart_itemsWhereInput
}

export type cart_itemsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type cart_itemsUser_idFragrance_idDecant_size_idCompoundUniqueInput = {
  user_id: bigint | number
  fragrance_id: bigint | number
  decant_size_id: bigint | number
}

export type cart_itemsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type cart_itemsAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
}

export type cart_itemsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type cart_itemsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type cart_itemsSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  fragrance_id?: Prisma.SortOrder
  decant_size_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
}

export type cart_itemsCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutUserInput, Prisma.cart_itemsUncheckedCreateWithoutUserInput> | Prisma.cart_itemsCreateWithoutUserInput[] | Prisma.cart_itemsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutUserInput | Prisma.cart_itemsCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.cart_itemsCreateManyUserInputEnvelope
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
}

export type cart_itemsUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutUserInput, Prisma.cart_itemsUncheckedCreateWithoutUserInput> | Prisma.cart_itemsCreateWithoutUserInput[] | Prisma.cart_itemsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutUserInput | Prisma.cart_itemsCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.cart_itemsCreateManyUserInputEnvelope
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
}

export type cart_itemsUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutUserInput, Prisma.cart_itemsUncheckedCreateWithoutUserInput> | Prisma.cart_itemsCreateWithoutUserInput[] | Prisma.cart_itemsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutUserInput | Prisma.cart_itemsCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.cart_itemsUpsertWithWhereUniqueWithoutUserInput | Prisma.cart_itemsUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.cart_itemsCreateManyUserInputEnvelope
  set?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  disconnect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  delete?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  update?: Prisma.cart_itemsUpdateWithWhereUniqueWithoutUserInput | Prisma.cart_itemsUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.cart_itemsUpdateManyWithWhereWithoutUserInput | Prisma.cart_itemsUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.cart_itemsScalarWhereInput | Prisma.cart_itemsScalarWhereInput[]
}

export type cart_itemsUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutUserInput, Prisma.cart_itemsUncheckedCreateWithoutUserInput> | Prisma.cart_itemsCreateWithoutUserInput[] | Prisma.cart_itemsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutUserInput | Prisma.cart_itemsCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.cart_itemsUpsertWithWhereUniqueWithoutUserInput | Prisma.cart_itemsUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.cart_itemsCreateManyUserInputEnvelope
  set?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  disconnect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  delete?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  update?: Prisma.cart_itemsUpdateWithWhereUniqueWithoutUserInput | Prisma.cart_itemsUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.cart_itemsUpdateManyWithWhereWithoutUserInput | Prisma.cart_itemsUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.cart_itemsScalarWhereInput | Prisma.cart_itemsScalarWhereInput[]
}

export type cart_itemsCreateNestedManyWithoutFragranceInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutFragranceInput, Prisma.cart_itemsUncheckedCreateWithoutFragranceInput> | Prisma.cart_itemsCreateWithoutFragranceInput[] | Prisma.cart_itemsUncheckedCreateWithoutFragranceInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutFragranceInput | Prisma.cart_itemsCreateOrConnectWithoutFragranceInput[]
  createMany?: Prisma.cart_itemsCreateManyFragranceInputEnvelope
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
}

export type cart_itemsUncheckedCreateNestedManyWithoutFragranceInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutFragranceInput, Prisma.cart_itemsUncheckedCreateWithoutFragranceInput> | Prisma.cart_itemsCreateWithoutFragranceInput[] | Prisma.cart_itemsUncheckedCreateWithoutFragranceInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutFragranceInput | Prisma.cart_itemsCreateOrConnectWithoutFragranceInput[]
  createMany?: Prisma.cart_itemsCreateManyFragranceInputEnvelope
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
}

export type cart_itemsUpdateManyWithoutFragranceNestedInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutFragranceInput, Prisma.cart_itemsUncheckedCreateWithoutFragranceInput> | Prisma.cart_itemsCreateWithoutFragranceInput[] | Prisma.cart_itemsUncheckedCreateWithoutFragranceInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutFragranceInput | Prisma.cart_itemsCreateOrConnectWithoutFragranceInput[]
  upsert?: Prisma.cart_itemsUpsertWithWhereUniqueWithoutFragranceInput | Prisma.cart_itemsUpsertWithWhereUniqueWithoutFragranceInput[]
  createMany?: Prisma.cart_itemsCreateManyFragranceInputEnvelope
  set?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  disconnect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  delete?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  update?: Prisma.cart_itemsUpdateWithWhereUniqueWithoutFragranceInput | Prisma.cart_itemsUpdateWithWhereUniqueWithoutFragranceInput[]
  updateMany?: Prisma.cart_itemsUpdateManyWithWhereWithoutFragranceInput | Prisma.cart_itemsUpdateManyWithWhereWithoutFragranceInput[]
  deleteMany?: Prisma.cart_itemsScalarWhereInput | Prisma.cart_itemsScalarWhereInput[]
}

export type cart_itemsUncheckedUpdateManyWithoutFragranceNestedInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutFragranceInput, Prisma.cart_itemsUncheckedCreateWithoutFragranceInput> | Prisma.cart_itemsCreateWithoutFragranceInput[] | Prisma.cart_itemsUncheckedCreateWithoutFragranceInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutFragranceInput | Prisma.cart_itemsCreateOrConnectWithoutFragranceInput[]
  upsert?: Prisma.cart_itemsUpsertWithWhereUniqueWithoutFragranceInput | Prisma.cart_itemsUpsertWithWhereUniqueWithoutFragranceInput[]
  createMany?: Prisma.cart_itemsCreateManyFragranceInputEnvelope
  set?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  disconnect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  delete?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  update?: Prisma.cart_itemsUpdateWithWhereUniqueWithoutFragranceInput | Prisma.cart_itemsUpdateWithWhereUniqueWithoutFragranceInput[]
  updateMany?: Prisma.cart_itemsUpdateManyWithWhereWithoutFragranceInput | Prisma.cart_itemsUpdateManyWithWhereWithoutFragranceInput[]
  deleteMany?: Prisma.cart_itemsScalarWhereInput | Prisma.cart_itemsScalarWhereInput[]
}

export type cart_itemsCreateNestedManyWithoutDecant_sizeInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutDecant_sizeInput, Prisma.cart_itemsUncheckedCreateWithoutDecant_sizeInput> | Prisma.cart_itemsCreateWithoutDecant_sizeInput[] | Prisma.cart_itemsUncheckedCreateWithoutDecant_sizeInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutDecant_sizeInput | Prisma.cart_itemsCreateOrConnectWithoutDecant_sizeInput[]
  createMany?: Prisma.cart_itemsCreateManyDecant_sizeInputEnvelope
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
}

export type cart_itemsUncheckedCreateNestedManyWithoutDecant_sizeInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutDecant_sizeInput, Prisma.cart_itemsUncheckedCreateWithoutDecant_sizeInput> | Prisma.cart_itemsCreateWithoutDecant_sizeInput[] | Prisma.cart_itemsUncheckedCreateWithoutDecant_sizeInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutDecant_sizeInput | Prisma.cart_itemsCreateOrConnectWithoutDecant_sizeInput[]
  createMany?: Prisma.cart_itemsCreateManyDecant_sizeInputEnvelope
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
}

export type cart_itemsUpdateManyWithoutDecant_sizeNestedInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutDecant_sizeInput, Prisma.cart_itemsUncheckedCreateWithoutDecant_sizeInput> | Prisma.cart_itemsCreateWithoutDecant_sizeInput[] | Prisma.cart_itemsUncheckedCreateWithoutDecant_sizeInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutDecant_sizeInput | Prisma.cart_itemsCreateOrConnectWithoutDecant_sizeInput[]
  upsert?: Prisma.cart_itemsUpsertWithWhereUniqueWithoutDecant_sizeInput | Prisma.cart_itemsUpsertWithWhereUniqueWithoutDecant_sizeInput[]
  createMany?: Prisma.cart_itemsCreateManyDecant_sizeInputEnvelope
  set?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  disconnect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  delete?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  update?: Prisma.cart_itemsUpdateWithWhereUniqueWithoutDecant_sizeInput | Prisma.cart_itemsUpdateWithWhereUniqueWithoutDecant_sizeInput[]
  updateMany?: Prisma.cart_itemsUpdateManyWithWhereWithoutDecant_sizeInput | Prisma.cart_itemsUpdateManyWithWhereWithoutDecant_sizeInput[]
  deleteMany?: Prisma.cart_itemsScalarWhereInput | Prisma.cart_itemsScalarWhereInput[]
}

export type cart_itemsUncheckedUpdateManyWithoutDecant_sizeNestedInput = {
  create?: Prisma.XOR<Prisma.cart_itemsCreateWithoutDecant_sizeInput, Prisma.cart_itemsUncheckedCreateWithoutDecant_sizeInput> | Prisma.cart_itemsCreateWithoutDecant_sizeInput[] | Prisma.cart_itemsUncheckedCreateWithoutDecant_sizeInput[]
  connectOrCreate?: Prisma.cart_itemsCreateOrConnectWithoutDecant_sizeInput | Prisma.cart_itemsCreateOrConnectWithoutDecant_sizeInput[]
  upsert?: Prisma.cart_itemsUpsertWithWhereUniqueWithoutDecant_sizeInput | Prisma.cart_itemsUpsertWithWhereUniqueWithoutDecant_sizeInput[]
  createMany?: Prisma.cart_itemsCreateManyDecant_sizeInputEnvelope
  set?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  disconnect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  delete?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  connect?: Prisma.cart_itemsWhereUniqueInput | Prisma.cart_itemsWhereUniqueInput[]
  update?: Prisma.cart_itemsUpdateWithWhereUniqueWithoutDecant_sizeInput | Prisma.cart_itemsUpdateWithWhereUniqueWithoutDecant_sizeInput[]
  updateMany?: Prisma.cart_itemsUpdateManyWithWhereWithoutDecant_sizeInput | Prisma.cart_itemsUpdateManyWithWhereWithoutDecant_sizeInput[]
  deleteMany?: Prisma.cart_itemsScalarWhereInput | Prisma.cart_itemsScalarWhereInput[]
}

export type cart_itemsCreateWithoutUserInput = {
  id?: bigint | number
  quantity?: number
  created_at?: Date | string
  fragrance: Prisma.fragrancesCreateNestedOneWithoutCart_itemsInput
  decant_size: Prisma.decant_sizesCreateNestedOneWithoutCart_itemsInput
}

export type cart_itemsUncheckedCreateWithoutUserInput = {
  id?: bigint | number
  fragrance_id: bigint | number
  decant_size_id: bigint | number
  quantity?: number
  created_at?: Date | string
}

export type cart_itemsCreateOrConnectWithoutUserInput = {
  where: Prisma.cart_itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.cart_itemsCreateWithoutUserInput, Prisma.cart_itemsUncheckedCreateWithoutUserInput>
}

export type cart_itemsCreateManyUserInputEnvelope = {
  data: Prisma.cart_itemsCreateManyUserInput | Prisma.cart_itemsCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type cart_itemsUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.cart_itemsWhereUniqueInput
  update: Prisma.XOR<Prisma.cart_itemsUpdateWithoutUserInput, Prisma.cart_itemsUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.cart_itemsCreateWithoutUserInput, Prisma.cart_itemsUncheckedCreateWithoutUserInput>
}

export type cart_itemsUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.cart_itemsWhereUniqueInput
  data: Prisma.XOR<Prisma.cart_itemsUpdateWithoutUserInput, Prisma.cart_itemsUncheckedUpdateWithoutUserInput>
}

export type cart_itemsUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.cart_itemsScalarWhereInput
  data: Prisma.XOR<Prisma.cart_itemsUpdateManyMutationInput, Prisma.cart_itemsUncheckedUpdateManyWithoutUserInput>
}

export type cart_itemsScalarWhereInput = {
  AND?: Prisma.cart_itemsScalarWhereInput | Prisma.cart_itemsScalarWhereInput[]
  OR?: Prisma.cart_itemsScalarWhereInput[]
  NOT?: Prisma.cart_itemsScalarWhereInput | Prisma.cart_itemsScalarWhereInput[]
  id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  user_id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  fragrance_id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  decant_size_id?: Prisma.BigIntFilter<"cart_items"> | bigint | number
  quantity?: Prisma.IntFilter<"cart_items"> | number
  created_at?: Prisma.DateTimeFilter<"cart_items"> | Date | string
}

export type cart_itemsCreateWithoutFragranceInput = {
  id?: bigint | number
  quantity?: number
  created_at?: Date | string
  user: Prisma.usersCreateNestedOneWithoutCart_itemsInput
  decant_size: Prisma.decant_sizesCreateNestedOneWithoutCart_itemsInput
}

export type cart_itemsUncheckedCreateWithoutFragranceInput = {
  id?: bigint | number
  user_id: bigint | number
  decant_size_id: bigint | number
  quantity?: number
  created_at?: Date | string
}

export type cart_itemsCreateOrConnectWithoutFragranceInput = {
  where: Prisma.cart_itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.cart_itemsCreateWithoutFragranceInput, Prisma.cart_itemsUncheckedCreateWithoutFragranceInput>
}

export type cart_itemsCreateManyFragranceInputEnvelope = {
  data: Prisma.cart_itemsCreateManyFragranceInput | Prisma.cart_itemsCreateManyFragranceInput[]
  skipDuplicates?: boolean
}

export type cart_itemsUpsertWithWhereUniqueWithoutFragranceInput = {
  where: Prisma.cart_itemsWhereUniqueInput
  update: Prisma.XOR<Prisma.cart_itemsUpdateWithoutFragranceInput, Prisma.cart_itemsUncheckedUpdateWithoutFragranceInput>
  create: Prisma.XOR<Prisma.cart_itemsCreateWithoutFragranceInput, Prisma.cart_itemsUncheckedCreateWithoutFragranceInput>
}

export type cart_itemsUpdateWithWhereUniqueWithoutFragranceInput = {
  where: Prisma.cart_itemsWhereUniqueInput
  data: Prisma.XOR<Prisma.cart_itemsUpdateWithoutFragranceInput, Prisma.cart_itemsUncheckedUpdateWithoutFragranceInput>
}

export type cart_itemsUpdateManyWithWhereWithoutFragranceInput = {
  where: Prisma.cart_itemsScalarWhereInput
  data: Prisma.XOR<Prisma.cart_itemsUpdateManyMutationInput, Prisma.cart_itemsUncheckedUpdateManyWithoutFragranceInput>
}

export type cart_itemsCreateWithoutDecant_sizeInput = {
  id?: bigint | number
  quantity?: number
  created_at?: Date | string
  user: Prisma.usersCreateNestedOneWithoutCart_itemsInput
  fragrance: Prisma.fragrancesCreateNestedOneWithoutCart_itemsInput
}

export type cart_itemsUncheckedCreateWithoutDecant_sizeInput = {
  id?: bigint | number
  user_id: bigint | number
  fragrance_id: bigint | number
  quantity?: number
  created_at?: Date | string
}

export type cart_itemsCreateOrConnectWithoutDecant_sizeInput = {
  where: Prisma.cart_itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.cart_itemsCreateWithoutDecant_sizeInput, Prisma.cart_itemsUncheckedCreateWithoutDecant_sizeInput>
}

export type cart_itemsCreateManyDecant_sizeInputEnvelope = {
  data: Prisma.cart_itemsCreateManyDecant_sizeInput | Prisma.cart_itemsCreateManyDecant_sizeInput[]
  skipDuplicates?: boolean
}

export type cart_itemsUpsertWithWhereUniqueWithoutDecant_sizeInput = {
  where: Prisma.cart_itemsWhereUniqueInput
  update: Prisma.XOR<Prisma.cart_itemsUpdateWithoutDecant_sizeInput, Prisma.cart_itemsUncheckedUpdateWithoutDecant_sizeInput>
  create: Prisma.XOR<Prisma.cart_itemsCreateWithoutDecant_sizeInput, Prisma.cart_itemsUncheckedCreateWithoutDecant_sizeInput>
}

export type cart_itemsUpdateWithWhereUniqueWithoutDecant_sizeInput = {
  where: Prisma.cart_itemsWhereUniqueInput
  data: Prisma.XOR<Prisma.cart_itemsUpdateWithoutDecant_sizeInput, Prisma.cart_itemsUncheckedUpdateWithoutDecant_sizeInput>
}

export type cart_itemsUpdateManyWithWhereWithoutDecant_sizeInput = {
  where: Prisma.cart_itemsScalarWhereInput
  data: Prisma.XOR<Prisma.cart_itemsUpdateManyMutationInput, Prisma.cart_itemsUncheckedUpdateManyWithoutDecant_sizeInput>
}

export type cart_itemsCreateManyUserInput = {
  id?: bigint | number
  fragrance_id: bigint | number
  decant_size_id: bigint | number
  quantity?: number
  created_at?: Date | string
}

export type cart_itemsUpdateWithoutUserInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  fragrance?: Prisma.fragrancesUpdateOneRequiredWithoutCart_itemsNestedInput
  decant_size?: Prisma.decant_sizesUpdateOneRequiredWithoutCart_itemsNestedInput
}

export type cart_itemsUncheckedUpdateWithoutUserInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cart_itemsUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cart_itemsCreateManyFragranceInput = {
  id?: bigint | number
  user_id: bigint | number
  decant_size_id: bigint | number
  quantity?: number
  created_at?: Date | string
}

export type cart_itemsUpdateWithoutFragranceInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.usersUpdateOneRequiredWithoutCart_itemsNestedInput
  decant_size?: Prisma.decant_sizesUpdateOneRequiredWithoutCart_itemsNestedInput
}

export type cart_itemsUncheckedUpdateWithoutFragranceInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cart_itemsUncheckedUpdateManyWithoutFragranceInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  decant_size_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cart_itemsCreateManyDecant_sizeInput = {
  id?: bigint | number
  user_id: bigint | number
  fragrance_id: bigint | number
  quantity?: number
  created_at?: Date | string
}

export type cart_itemsUpdateWithoutDecant_sizeInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.usersUpdateOneRequiredWithoutCart_itemsNestedInput
  fragrance?: Prisma.fragrancesUpdateOneRequiredWithoutCart_itemsNestedInput
}

export type cart_itemsUncheckedUpdateWithoutDecant_sizeInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type cart_itemsUncheckedUpdateManyWithoutDecant_sizeInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  fragrance_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type cart_itemsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  fragrance_id?: boolean
  decant_size_id?: boolean
  quantity?: boolean
  created_at?: boolean
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}, ExtArgs["result"]["cart_items"]>

export type cart_itemsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  fragrance_id?: boolean
  decant_size_id?: boolean
  quantity?: boolean
  created_at?: boolean
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}, ExtArgs["result"]["cart_items"]>

export type cart_itemsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  fragrance_id?: boolean
  decant_size_id?: boolean
  quantity?: boolean
  created_at?: boolean
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}, ExtArgs["result"]["cart_items"]>

export type cart_itemsSelectScalar = {
  id?: boolean
  user_id?: boolean
  fragrance_id?: boolean
  decant_size_id?: boolean
  quantity?: boolean
  created_at?: boolean
}

export type cart_itemsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "user_id" | "fragrance_id" | "decant_size_id" | "quantity" | "created_at", ExtArgs["result"]["cart_items"]>
export type cart_itemsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}
export type cart_itemsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}
export type cart_itemsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  fragrance?: boolean | Prisma.fragrancesDefaultArgs<ExtArgs>
  decant_size?: boolean | Prisma.decant_sizesDefaultArgs<ExtArgs>
}

export type $cart_itemsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "cart_items"
  objects: {
    user: Prisma.$usersPayload<ExtArgs>
    fragrance: Prisma.$fragrancesPayload<ExtArgs>
    decant_size: Prisma.$decant_sizesPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: bigint
    user_id: bigint
    fragrance_id: bigint
    decant_size_id: bigint
    quantity: number
    created_at: Date
  }, ExtArgs["result"]["cart_items"]>
  composites: {}
}

export type cart_itemsGetPayload<S extends boolean | null | undefined | cart_itemsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload, S>

export type cart_itemsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<cart_itemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Cart_itemsCountAggregateInputType | true
  }

export interface cart_itemsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cart_items'], meta: { name: 'cart_items' } }
  /**
   * Find zero or one Cart_items that matches the filter.
   * @param {cart_itemsFindUniqueArgs} args - Arguments to find a Cart_items
   * @example
   * // Get one Cart_items
   * const cart_items = await prisma.cart_items.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends cart_itemsFindUniqueArgs>(args: Prisma.SelectSubset<T, cart_itemsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__cart_itemsClient<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Cart_items that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {cart_itemsFindUniqueOrThrowArgs} args - Arguments to find a Cart_items
   * @example
   * // Get one Cart_items
   * const cart_items = await prisma.cart_items.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends cart_itemsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, cart_itemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__cart_itemsClient<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Cart_items that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cart_itemsFindFirstArgs} args - Arguments to find a Cart_items
   * @example
   * // Get one Cart_items
   * const cart_items = await prisma.cart_items.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends cart_itemsFindFirstArgs>(args?: Prisma.SelectSubset<T, cart_itemsFindFirstArgs<ExtArgs>>): Prisma.Prisma__cart_itemsClient<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Cart_items that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cart_itemsFindFirstOrThrowArgs} args - Arguments to find a Cart_items
   * @example
   * // Get one Cart_items
   * const cart_items = await prisma.cart_items.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends cart_itemsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, cart_itemsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__cart_itemsClient<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Cart_items that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cart_itemsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Cart_items
   * const cart_items = await prisma.cart_items.findMany()
   * 
   * // Get first 10 Cart_items
   * const cart_items = await prisma.cart_items.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const cart_itemsWithIdOnly = await prisma.cart_items.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends cart_itemsFindManyArgs>(args?: Prisma.SelectSubset<T, cart_itemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Cart_items.
   * @param {cart_itemsCreateArgs} args - Arguments to create a Cart_items.
   * @example
   * // Create one Cart_items
   * const Cart_items = await prisma.cart_items.create({
   *   data: {
   *     // ... data to create a Cart_items
   *   }
   * })
   * 
   */
  create<T extends cart_itemsCreateArgs>(args: Prisma.SelectSubset<T, cart_itemsCreateArgs<ExtArgs>>): Prisma.Prisma__cart_itemsClient<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Cart_items.
   * @param {cart_itemsCreateManyArgs} args - Arguments to create many Cart_items.
   * @example
   * // Create many Cart_items
   * const cart_items = await prisma.cart_items.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends cart_itemsCreateManyArgs>(args?: Prisma.SelectSubset<T, cart_itemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Cart_items and returns the data saved in the database.
   * @param {cart_itemsCreateManyAndReturnArgs} args - Arguments to create many Cart_items.
   * @example
   * // Create many Cart_items
   * const cart_items = await prisma.cart_items.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Cart_items and only return the `id`
   * const cart_itemsWithIdOnly = await prisma.cart_items.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends cart_itemsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, cart_itemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Cart_items.
   * @param {cart_itemsDeleteArgs} args - Arguments to delete one Cart_items.
   * @example
   * // Delete one Cart_items
   * const Cart_items = await prisma.cart_items.delete({
   *   where: {
   *     // ... filter to delete one Cart_items
   *   }
   * })
   * 
   */
  delete<T extends cart_itemsDeleteArgs>(args: Prisma.SelectSubset<T, cart_itemsDeleteArgs<ExtArgs>>): Prisma.Prisma__cart_itemsClient<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Cart_items.
   * @param {cart_itemsUpdateArgs} args - Arguments to update one Cart_items.
   * @example
   * // Update one Cart_items
   * const cart_items = await prisma.cart_items.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends cart_itemsUpdateArgs>(args: Prisma.SelectSubset<T, cart_itemsUpdateArgs<ExtArgs>>): Prisma.Prisma__cart_itemsClient<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Cart_items.
   * @param {cart_itemsDeleteManyArgs} args - Arguments to filter Cart_items to delete.
   * @example
   * // Delete a few Cart_items
   * const { count } = await prisma.cart_items.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends cart_itemsDeleteManyArgs>(args?: Prisma.SelectSubset<T, cart_itemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Cart_items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cart_itemsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Cart_items
   * const cart_items = await prisma.cart_items.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends cart_itemsUpdateManyArgs>(args: Prisma.SelectSubset<T, cart_itemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Cart_items and returns the data updated in the database.
   * @param {cart_itemsUpdateManyAndReturnArgs} args - Arguments to update many Cart_items.
   * @example
   * // Update many Cart_items
   * const cart_items = await prisma.cart_items.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Cart_items and only return the `id`
   * const cart_itemsWithIdOnly = await prisma.cart_items.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends cart_itemsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, cart_itemsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Cart_items.
   * @param {cart_itemsUpsertArgs} args - Arguments to update or create a Cart_items.
   * @example
   * // Update or create a Cart_items
   * const cart_items = await prisma.cart_items.upsert({
   *   create: {
   *     // ... data to create a Cart_items
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Cart_items we want to update
   *   }
   * })
   */
  upsert<T extends cart_itemsUpsertArgs>(args: Prisma.SelectSubset<T, cart_itemsUpsertArgs<ExtArgs>>): Prisma.Prisma__cart_itemsClient<runtime.Types.Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Cart_items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cart_itemsCountArgs} args - Arguments to filter Cart_items to count.
   * @example
   * // Count the number of Cart_items
   * const count = await prisma.cart_items.count({
   *   where: {
   *     // ... the filter for the Cart_items we want to count
   *   }
   * })
  **/
  count<T extends cart_itemsCountArgs>(
    args?: Prisma.Subset<T, cart_itemsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Cart_itemsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Cart_items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Cart_itemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Cart_itemsAggregateArgs>(args: Prisma.Subset<T, Cart_itemsAggregateArgs>): Prisma.PrismaPromise<GetCart_itemsAggregateType<T>>

  /**
   * Group by Cart_items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cart_itemsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends cart_itemsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: cart_itemsGroupByArgs['orderBy'] }
      : { orderBy?: cart_itemsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, cart_itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCart_itemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the cart_items model
 */
readonly fields: cart_itemsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for cart_items.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__cart_itemsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.usersDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.usersDefaultArgs<ExtArgs>>): Prisma.Prisma__usersClient<runtime.Types.Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  fragrance<T extends Prisma.fragrancesDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.fragrancesDefaultArgs<ExtArgs>>): Prisma.Prisma__fragrancesClient<runtime.Types.Result.GetResult<Prisma.$fragrancesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  decant_size<T extends Prisma.decant_sizesDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.decant_sizesDefaultArgs<ExtArgs>>): Prisma.Prisma__decant_sizesClient<runtime.Types.Result.GetResult<Prisma.$decant_sizesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the cart_items model
 */
export interface cart_itemsFieldRefs {
  readonly id: Prisma.FieldRef<"cart_items", 'BigInt'>
  readonly user_id: Prisma.FieldRef<"cart_items", 'BigInt'>
  readonly fragrance_id: Prisma.FieldRef<"cart_items", 'BigInt'>
  readonly decant_size_id: Prisma.FieldRef<"cart_items", 'BigInt'>
  readonly quantity: Prisma.FieldRef<"cart_items", 'Int'>
  readonly created_at: Prisma.FieldRef<"cart_items", 'DateTime'>
}
    

// Custom InputTypes
/**
 * cart_items findUnique
 */
export type cart_itemsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsInclude<ExtArgs> | null
  /**
   * Filter, which cart_items to fetch.
   */
  where: Prisma.cart_itemsWhereUniqueInput
}

/**
 * cart_items findUniqueOrThrow
 */
export type cart_itemsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsInclude<ExtArgs> | null
  /**
   * Filter, which cart_items to fetch.
   */
  where: Prisma.cart_itemsWhereUniqueInput
}

/**
 * cart_items findFirst
 */
export type cart_itemsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsInclude<ExtArgs> | null
  /**
   * Filter, which cart_items to fetch.
   */
  where?: Prisma.cart_itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cart_items to fetch.
   */
  orderBy?: Prisma.cart_itemsOrderByWithRelationInput | Prisma.cart_itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for cart_items.
   */
  cursor?: Prisma.cart_itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cart_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cart_items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of cart_items.
   */
  distinct?: Prisma.Cart_itemsScalarFieldEnum | Prisma.Cart_itemsScalarFieldEnum[]
}

/**
 * cart_items findFirstOrThrow
 */
export type cart_itemsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsInclude<ExtArgs> | null
  /**
   * Filter, which cart_items to fetch.
   */
  where?: Prisma.cart_itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cart_items to fetch.
   */
  orderBy?: Prisma.cart_itemsOrderByWithRelationInput | Prisma.cart_itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for cart_items.
   */
  cursor?: Prisma.cart_itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cart_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cart_items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of cart_items.
   */
  distinct?: Prisma.Cart_itemsScalarFieldEnum | Prisma.Cart_itemsScalarFieldEnum[]
}

/**
 * cart_items findMany
 */
export type cart_itemsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsInclude<ExtArgs> | null
  /**
   * Filter, which cart_items to fetch.
   */
  where?: Prisma.cart_itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cart_items to fetch.
   */
  orderBy?: Prisma.cart_itemsOrderByWithRelationInput | Prisma.cart_itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing cart_items.
   */
  cursor?: Prisma.cart_itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cart_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cart_items.
   */
  skip?: number
  distinct?: Prisma.Cart_itemsScalarFieldEnum | Prisma.Cart_itemsScalarFieldEnum[]
}

/**
 * cart_items create
 */
export type cart_itemsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsInclude<ExtArgs> | null
  /**
   * The data needed to create a cart_items.
   */
  data: Prisma.XOR<Prisma.cart_itemsCreateInput, Prisma.cart_itemsUncheckedCreateInput>
}

/**
 * cart_items createMany
 */
export type cart_itemsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many cart_items.
   */
  data: Prisma.cart_itemsCreateManyInput | Prisma.cart_itemsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * cart_items createManyAndReturn
 */
export type cart_itemsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * The data used to create many cart_items.
   */
  data: Prisma.cart_itemsCreateManyInput | Prisma.cart_itemsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * cart_items update
 */
export type cart_itemsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsInclude<ExtArgs> | null
  /**
   * The data needed to update a cart_items.
   */
  data: Prisma.XOR<Prisma.cart_itemsUpdateInput, Prisma.cart_itemsUncheckedUpdateInput>
  /**
   * Choose, which cart_items to update.
   */
  where: Prisma.cart_itemsWhereUniqueInput
}

/**
 * cart_items updateMany
 */
export type cart_itemsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update cart_items.
   */
  data: Prisma.XOR<Prisma.cart_itemsUpdateManyMutationInput, Prisma.cart_itemsUncheckedUpdateManyInput>
  /**
   * Filter which cart_items to update
   */
  where?: Prisma.cart_itemsWhereInput
  /**
   * Limit how many cart_items to update.
   */
  limit?: number
}

/**
 * cart_items updateManyAndReturn
 */
export type cart_itemsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * The data used to update cart_items.
   */
  data: Prisma.XOR<Prisma.cart_itemsUpdateManyMutationInput, Prisma.cart_itemsUncheckedUpdateManyInput>
  /**
   * Filter which cart_items to update
   */
  where?: Prisma.cart_itemsWhereInput
  /**
   * Limit how many cart_items to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * cart_items upsert
 */
export type cart_itemsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsInclude<ExtArgs> | null
  /**
   * The filter to search for the cart_items to update in case it exists.
   */
  where: Prisma.cart_itemsWhereUniqueInput
  /**
   * In case the cart_items found by the `where` argument doesn't exist, create a new cart_items with this data.
   */
  create: Prisma.XOR<Prisma.cart_itemsCreateInput, Prisma.cart_itemsUncheckedCreateInput>
  /**
   * In case the cart_items was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.cart_itemsUpdateInput, Prisma.cart_itemsUncheckedUpdateInput>
}

/**
 * cart_items delete
 */
export type cart_itemsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsInclude<ExtArgs> | null
  /**
   * Filter which cart_items to delete.
   */
  where: Prisma.cart_itemsWhereUniqueInput
}

/**
 * cart_items deleteMany
 */
export type cart_itemsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which cart_items to delete
   */
  where?: Prisma.cart_itemsWhereInput
  /**
   * Limit how many cart_items to delete.
   */
  limit?: number
}

/**
 * cart_items without action
 */
export type cart_itemsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cart_items
   */
  select?: Prisma.cart_itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cart_items
   */
  omit?: Prisma.cart_itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.cart_itemsInclude<ExtArgs> | null
}
